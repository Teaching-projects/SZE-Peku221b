include "globals.mzn";

int: db = 15;
set of int: PEOPLE = 1..db;



enum NEVS = {DANI, PETI, LACI, ANDRAS, MARK, REKA, PETRA, ZOLI, ZSOFI ,JANI, BELA, GIZI, JOZSI, DALMA, ESZTER};
enum ELETKORS = {HUSZONOT, HUSZONEGY, HUSZONNYOLC, HARMINC, HARMINCKETTO, HUSZONKETTO, HARMINCHAROM, HUSZONKILENC, HUSZONHET, HARMINCEGY, HARMINCOT, HUSZONHAT, HARMINCNEGY, HUSZONNEGY, HUSZONHAROM};
enum KEDVENCSZINS = {ZOLD, SARGA, BARNA, KEK, NARANCSSARGA, LILA, PIROS, FEKETE, ROZSASZIN, FEHER, OKKER, MAGENTA, SZURKE, BIBOR, ARANY};
enum AUTOS = {AUDI, RENAULT, FERRARI, PEUGEOT, SUZUKI, SKODA, VOLVO, MERCEDES, HONDA, TOYOTA, PORSCHE, BMW, FORD, MAZDA, NISSAN};
enum KEDVENCALLATS = {OROSZLAN, TIGRIS, LO, KECSKE, KUTYA, RIGO, TEKNOS, ROKA, MACSKA, BEKA, SZAMAR, PILLANGO, FARKAS, TENGERIMALAC, DELFIN};
enum KEDVENCFOCICSAPATS = {JUVENTUS, BARCELONA, LIVERPOOL, CITY, INTER, LYON, UNITED, CHELSEA, BAYERN, REAL, MILAN, NAPOLI, ROMA, PSG, SPURS};
enum KEDVENCSPORTS = {JUDO, KUNGFU, FOCI, ROGBI, GOKART, ROPLABDA, AEROBIK, FUTSAL, FALMASZAS, FUTAS, LOVESZET, KARATE, USZAS, IJASZAT, KOSAR};
enum VAROSS = {SZEKESFEHERVAR, GYOR, NYIREGYHAZA, BUDAPEST, MISKOLC, VAC, SZOLNOK, MOR, VESZPREM, PECS, DEBRECEN, ESZTERGOM, SZEGED, KECSKEMET, SZOMBATHELY};
enum KERESETS = {K480K, K460K, K540K, K700K, K660K, K500K, K420K, K560K, K620K, K440K, K580K, K680K, K520K, K600K, K640K};
enum RUHAMARKAS = {PUMA, ARMANI, CALVINKLEIN, ADIDAS, LACOSTE, NIKE, OMBRE, FILA, REEBOK, VANS, GUCCI, EVERLAST, CONVERSE, MUSTANG, CASIO};
enum KEDVENCETELS = {PIZZA, LECSO, RANTOTTHUS, PACAL, SPAGETTI, KENYER, HUSLEVES, SULTKRUMPLI, FAGYI, PITE, SUTI, LEKVAR, FOZELEK, PALACSINTA, RAKOTTKRUMPLI};
enum KEDVENCITALS = {SOR, GYUMOLCSLE, KOLA, BOR, VIZ, KOKTEL, SZORP, GIN, KAKAO, PALINKA, WHISKY, TEA, VODKA, TEJ, MOJITO};
enum KEDVENCGYUMOLCSZOLDSEGS = {KORTE, PARADICSOM, KIWI, BANAN, DINNYE, ALMA, BARACK, RIBIZLI, SZOLO, DIO, PAPRIKA, KAPOSZTA, NARANCS, BROKKOLI, SZILVA};
enum KEDVENCISKOLAITANTARGYS = {TORI, KEMIA, TESI, SPANYOL, FIZIKA, INFORMATIKA, IRODALOM, BIOSZ, FILOZOFIA, ANGOL, NYELVTAN, OLASZ, MATEK, NEMET, OROSZ};
enum MUNKAS = {TANAR, KOMUVES, TUZOLTO, EPITESZ, RENDOR, ELADO, UGYVED, NYOMOZO, IRO, MERNOK, BIRO, IGAZGATO, KATONA, TECHNIKUS, PORTAS};


array[NEVS, PEOPLE] of var {0, 1}: NEV;
array[ELETKORS, PEOPLE] of var {0, 1}: ELETKOR;
array[KEDVENCSZINS, PEOPLE] of var {0, 1}: KEDVENCSZIN;
array[AUTOS, PEOPLE] of var {0, 1}: AUTO;
array[KEDVENCALLATS, PEOPLE] of var {0, 1}: KEDVENCALLAT;
array[KEDVENCFOCICSAPATS, PEOPLE] of var {0, 1}: KEDVENCFOCICSAPAT;
array[KEDVENCSPORTS, PEOPLE] of var {0, 1}: KEDVENCSPORT;
array[VAROSS, PEOPLE] of var {0, 1}: VAROS;
array[KERESETS, PEOPLE] of var {0, 1}: KERESET;
array[RUHAMARKAS, PEOPLE] of var {0, 1}: RUHAMARKA;
array[KEDVENCETELS, PEOPLE] of var {0, 1}: KEDVENCETEL;
array[KEDVENCITALS, PEOPLE] of var {0, 1}: KEDVENCITAL;
array[KEDVENCGYUMOLCSZOLDSEGS, PEOPLE] of var {0, 1}: KEDVENCGYUMOLCSZOLDSEG;
array[KEDVENCISKOLAITANTARGYS, PEOPLE] of var {0, 1}: KEDVENCISKOLAITANTARGY;
array[MUNKAS, PEOPLE] of var {0, 1}: MUNKA;


constraint forall(p in PEOPLE)(sum(n in NEVS)(NEV[n, p])=1) /\ forall(n in NEVS)(sum(p in PEOPLE)(NEV[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in ELETKORS)(ELETKOR[n, p])=1) /\ forall(n in ELETKORS)(sum(p in PEOPLE)(ELETKOR[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCSZINS)(KEDVENCSZIN[n, p])=1) /\ forall(n in KEDVENCSZINS)(sum(p in PEOPLE)(KEDVENCSZIN[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in AUTOS)(AUTO[n, p])=1) /\ forall(n in AUTOS)(sum(p in PEOPLE)(AUTO[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCALLATS)(KEDVENCALLAT[n, p])=1) /\ forall(n in KEDVENCALLATS)(sum(p in PEOPLE)(KEDVENCALLAT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCFOCICSAPATS)(KEDVENCFOCICSAPAT[n, p])=1) /\ forall(n in KEDVENCFOCICSAPATS)(sum(p in PEOPLE)(KEDVENCFOCICSAPAT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCSPORTS)(KEDVENCSPORT[n, p])=1) /\ forall(n in KEDVENCSPORTS)(sum(p in PEOPLE)(KEDVENCSPORT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in VAROSS)(VAROS[n, p])=1) /\ forall(n in VAROSS)(sum(p in PEOPLE)(VAROS[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KERESETS)(KERESET[n, p])=1) /\ forall(n in KERESETS)(sum(p in PEOPLE)(KERESET[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in RUHAMARKAS)(RUHAMARKA[n, p])=1) /\ forall(n in RUHAMARKAS)(sum(p in PEOPLE)(RUHAMARKA[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCETELS)(KEDVENCETEL[n, p])=1) /\ forall(n in KEDVENCETELS)(sum(p in PEOPLE)(KEDVENCETEL[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCITALS)(KEDVENCITAL[n, p])=1) /\ forall(n in KEDVENCITALS)(sum(p in PEOPLE)(KEDVENCITAL[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCGYUMOLCSZOLDSEGS)(KEDVENCGYUMOLCSZOLDSEG[n, p])=1) /\ forall(n in KEDVENCGYUMOLCSZOLDSEGS)(sum(p in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCISKOLAITANTARGYS)(KEDVENCISKOLAITANTARGY[n, p])=1) /\ forall(n in KEDVENCISKOLAITANTARGYS)(sum(p in PEOPLE)(KEDVENCISKOLAITANTARGY[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in MUNKAS)(MUNKA[n, p])=1) /\ forall(n in MUNKAS)(sum(p in PEOPLE)(MUNKA[n, p])=1);


constraint KEDVENCALLAT[DELFIN,1]+KEDVENCALLAT[DELFIN,db]=1;
constraint KEDVENCFOCICSAPAT[SPURS,1]+KEDVENCFOCICSAPAT[SPURS,db]=1;
constraint MUNKA[TANAR,1]+MUNKA[TANAR,db]=1;
constraint NEV[ESZTER,1]+NEV[ESZTER,db]=1;
constraint KERESET[K480K,1]+KERESET[K480K,db]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[KORTE,1]+KEDVENCGYUMOLCSZOLDSEG[KORTE,db]=1;
constraint KEDVENCSPORT[KOSAR,1]+KEDVENCSPORT[KOSAR,db]=1;
constraint KEDVENCALLAT[OROSZLAN,1]+KEDVENCALLAT[OROSZLAN,db]=1;
constraint KEDVENCITAL[MOJITO,1]+KEDVENCITAL[MOJITO,db]=1;
constraint KEDVENCISKOLAITANTARGY[OROSZ,1]+KEDVENCISKOLAITANTARGY[OROSZ,db]=1;
constraint AUTO[NISSAN,1]+AUTO[NISSAN,db]=1;
constraint RUHAMARKA[CASIO,1]+RUHAMARKA[CASIO,db]=1;
constraint VAROS[SZEKESFEHERVAR,1]+VAROS[SZEKESFEHERVAR,db]=1;


constraint forall(szek in PEOPLE)(AUTO[TOYOTA,szek] = KEDVENCFOCICSAPAT[REAL, szek]);
constraint forall(szek in PEOPLE)(KEDVENCISKOLAITANTARGY[BIOSZ,szek] = KERESET[K560K, szek]);
constraint forall(szek in PEOPLE)(NEV[ANDRAS,szek] = KEDVENCETEL[PACAL, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[REAL,szek] = KEDVENCSPORT[FUTAS, szek]);
constraint forall(szek in PEOPLE)(VAROS[GYOR,szek] = KEDVENCGYUMOLCSZOLDSEG[PARADICSOM, szek]);
constraint forall(szek in PEOPLE)(KEDVENCALLAT[OROSZLAN,szek] = KEDVENCISKOLAITANTARGY[TORI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCALLAT[SZAMAR,szek] = KEDVENCSZIN[OKKER, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONKETTO,szek] = KEDVENCSPORT[ROPLABDA, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[BARNA,szek] = NEV[LACI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[ROMA,szek] = VAROS[SZEGED, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[REEBOK,szek] = KEDVENCETEL[FAGYI, szek]);
constraint forall(szek in PEOPLE)(AUTO[BMW,szek] = KEDVENCISKOLAITANTARGY[OLASZ, szek]);
constraint forall(szek in PEOPLE)(NEV[DALMA,szek] = KEDVENCITAL[TEJ, szek]);
constraint forall(szek in PEOPLE)(VAROS[GYOR,szek] = KEDVENCALLAT[TIGRIS, szek]);
constraint forall(szek in PEOPLE)(KERESET[K560K,szek] = KEDVENCSZIN[FEKETE, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[CALVINKLEIN,szek] = KEDVENCISKOLAITANTARGY[TESI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[SOR,szek] = ELETKOR[HUSZONOT, szek]);
constraint forall(szek in PEOPLE)(KEDVENCETEL[FAGYI,szek] = KEDVENCFOCICSAPAT[BAYERN, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONOT,szek] = RUHAMARKA[PUMA, szek]);
constraint forall(szek in PEOPLE)(KERESET[K500K,szek] = KEDVENCISKOLAITANTARGY[INFORMATIKA, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[GUCCI,szek] = KEDVENCITAL[WHISKY, szek]);
constraint forall(szek in PEOPLE)(NEV[MARK,szek] = KEDVENCFOCICSAPAT[INTER, szek]);
constraint forall(szek in PEOPLE)(AUTO[TOYOTA,szek] = NEV[JANI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[BARACK,szek] = KEDVENCITAL[SZORP, szek]);
constraint forall(szek in PEOPLE)(KERESET[K560K,szek] = MUNKA[NYOMOZO, szek]);
constraint forall(szek in PEOPLE)(MUNKA[IRO,szek] = NEV[ZSOFI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCISKOLAITANTARGY[OROSZ,szek] = KERESET[K640K, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONHAROM,szek] = KEDVENCGYUMOLCSZOLDSEG[SZILVA, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[CONVERSE,szek] = NEV[JOZSI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[FEHER,szek] = KEDVENCETEL[PITE, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSPORT[FUTAS,szek] = KERESET[K440K, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[WHISKY,szek] = KEDVENCISKOLAITANTARGY[NYELVTAN, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[TEJ,szek] = AUTO[MAZDA, szek]);
constraint forall(szek in PEOPLE)(AUTO[FERRARI,szek] = VAROS[NYIREGYHAZA, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONHET,szek] = KEDVENCSPORT[FALMASZAS, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[TEJ,szek] = KEDVENCGYUMOLCSZOLDSEG[BROKKOLI, szek]);
constraint forall(szek in PEOPLE)(AUTO[BMW,szek] = KEDVENCETEL[LEKVAR, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[FILA,szek] = KEDVENCITAL[GIN, szek]);
constraint forall(szek in PEOPLE)(MUNKA[IRO,szek] = KEDVENCALLAT[MACSKA, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[SZURKE,szek] = KEDVENCITAL[VODKA, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[KEK,szek] = AUTO[PEUGEOT, szek]);
constraint forall(szek in PEOPLE)(KEDVENCISKOLAITANTARGY[MATEK,szek] = ELETKOR[HARMINCNEGY, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[NARANCS,szek] = ELETKOR[HARMINCNEGY, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[PSG,szek] = KEDVENCSZIN[BIBOR, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[DIO,szek] = KEDVENCISKOLAITANTARGY[ANGOL, szek]);
constraint forall(szek in PEOPLE)(KEDVENCALLAT[TEKNOS,szek] = AUTO[VOLVO, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[BANAN,szek] = KEDVENCALLAT[KECSKE, szek]);
constraint forall(szek in PEOPLE)(KEDVENCETEL[LECSO,szek] = KEDVENCSPORT[KUNGFU, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HARMINCEGY,szek] = KEDVENCALLAT[BEKA, szek]);
constraint forall(szek in PEOPLE)(VAROS[MISKOLC,szek] = KEDVENCETEL[SPAGETTI, szek]);
constraint forall(szek in PEOPLE)(MUNKA[BIRO,szek] = AUTO[PORSCHE, szek]);
constraint forall(szek in PEOPLE)(KEDVENCETEL[HUSLEVES,szek] = KEDVENCSPORT[AEROBIK, szek]);
constraint forall(szek in PEOPLE)(VAROS[SZEGED,szek] = KERESET[K520K, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[BAYERN,szek] = KERESET[K620K, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSPORT[KUNGFU,szek] = KEDVENCGYUMOLCSZOLDSEG[PARADICSOM, szek]);


constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCSZIN[BARNA,x]=1 /\ AUTO[TOYOTA,y]=1) -> sum(szek in x+1..y-1)(NEV[REKA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCFOCICSAPAT[BAYERN,x]=1 /\ KEDVENCISKOLAITANTARGY[OROSZ,y]=1) -> sum(szek in x+1..y-1)(RUHAMARKA[CONVERSE,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCSZIN[OKKER,x]=1 /\ KEDVENCSPORT[KOSAR,y]=1) -> sum(szek in x+1..y-1)(VAROS[KECSKEMET,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCFOCICSAPAT[INTER,x]=1 /\ KEDVENCSZIN[FEKETE,y]=1) -> sum(szek in x+1..y-1)(KERESET[K420K,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCISKOLAITANTARGY[TESI,x]=1 /\ KEDVENCITAL[TEJ,y]=1) -> sum(szek in x+1..y-1)(NEV[BELA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((NEV[JANI,x]=1 /\ VAROS[SZEGED,y]=1) -> sum(szek in x+1..y-1)(KEDVENCFOCICSAPAT[MILAN,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((AUTO[FERRARI,x]=1 /\ VAROS[MISKOLC,y]=1) -> sum(szek in x+1..y-1)(ELETKOR[HARMINC,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((MUNKA[IGAZGATO,x]=1 /\ AUTO[NISSAN,y]=1) -> sum(szek in x+1..y-1)(ELETKOR[HUSZONNEGY,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCGYUMOLCSZOLDSEG[BARACK,x]=1 /\ KERESET[K680K,y]=1) -> sum(szek in x+1..y-1)(KEDVENCISKOLAITANTARGY[FILOZOFIA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((AUTO[AUDI,x]=1 /\ KEDVENCITAL[VIZ,y]=1) -> sum(szek in x+1..y-1)(MUNKA[EPITESZ,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KERESET[K480K,x]=1 /\ VAROS[BUDAPEST,y]=1) -> sum(szek in x+1..y-1)(KEDVENCISKOLAITANTARGY[KEMIA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCSZIN[BARNA,x]=1 /\ KEDVENCITAL[KAKAO,y]=1) -> sum(szek in x+1..y-1)(KEDVENCISKOLAITANTARGY[FIZIKA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((ELETKOR[HARMINCHAROM,x]=1 /\ AUTO[BMW,y]=1) -> sum(szek in x+1..y-1)(KEDVENCSZIN[ROZSASZIN,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCALLAT[KUTYA,x]=1 /\ VAROS[PECS,y]=1) -> sum(szek in x+1..y-1)(KEDVENCFOCICSAPAT[UNITED,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCSZIN[FEKETE,x]=1 /\ KEDVENCALLAT[SZAMAR,y]=1) -> sum(szek in x+1..y-1)(AUTO[HONDA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((ELETKOR[HARMINCEGY,x]=1 /\ KEDVENCSPORT[KOSAR,y]=1) -> sum(szek in x+1..y-1)(AUTO[FORD,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((AUTO[VOLVO,x]=1 /\ KEDVENCITAL[WHISKY,y]=1) -> sum(szek in x+1..y-1)(KEDVENCALLAT[ROKA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((ELETKOR[HUSZONKILENC,x]=1 /\ KEDVENCSPORT[IJASZAT,y]=1) -> sum(szek in x+1..y-1)(KEDVENCALLAT[PILLANGO,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KERESET[K680K,x]=1 /\ KEDVENCISKOLAITANTARGY[OROSZ,y]=1) -> sum(szek in x+1..y-1)(KEDVENCETEL[PALACSINTA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCETEL[LECSO,x]=1 /\ KEDVENCITAL[BOR,y]=1) -> sum(szek in x+1..y-1)(KEDVENCGYUMOLCSZOLDSEG[KIWI,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((MUNKA[MERNOK,x]=1 /\ RUHAMARKA[MUSTANG,y]=1) -> sum(szek in x+1..y-1)(KEDVENCSPORT[LOVESZET,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((VAROS[GYOR,x]=1 /\ KEDVENCALLAT[KUTYA,y]=1) -> sum(szek in x+1..y-1)(KEDVENCETEL[RANTOTTHUS,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCALLAT[TIGRIS,x]=1 /\ KEDVENCITAL[KOKTEL,y]=1) -> sum(szek in x+1..y-1)(RUHAMARKA[ADIDAS,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCFOCICSAPAT[UNITED,x]=1 /\ ELETKOR[HARMINCOT,y]=1) -> sum(szek in x+1..y-1)(VAROS[VESZPREM,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCETEL[HUSLEVES,x]=1 /\ MUNKA[KATONA,y]=1) -> sum(szek in x+1..y-1)(KERESET[K580K,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE)((KEDVENCSPORT[FALMASZAS,x]=1 /\ KEDVENCGYUMOLCSZOLDSEG[BROKKOLI,y]=1) -> sum(szek in x+1..y-1)(KEDVENCETEL[SUTI,szek])=1);



constraint ELETKOR[HUSZONKETTO,6]=1;
constraint AUTO[BMW,12]=1;
constraint RUHAMARKA[REEBOK,9]=1;
constraint KEDVENCITAL[VIZ,5]=1;
constraint VAROS[GYOR,2]=1;
constraint KEDVENCISKOLAITANTARGY[BIOSZ,8]=1;
constraint KERESET[K660K,5]=1;
constraint NEV[DALMA,14]=1;
constraint AUTO[TOYOTA,10]=1;
constraint MUNKA[TUZOLTO,3]=1;
constraint KEDVENCALLAT[OROSZLAN,1]=1;
constraint KEDVENCFOCICSAPAT[ROMA,13]=1;
constraint KEDVENCFOCICSAPAT[JUVENTUS,1]=1;
constraint NEV[PETRA,7]=1;
constraint AUTO[SKODA,6]=1;
constraint RUHAMARKA[MUSTANG,14]=1;
constraint MUNKA[PORTAS,15]=1;
constraint RUHAMARKA[CALVINKLEIN,3]=1;
constraint MUNKA[IGAZGATO,12]=1;
constraint VAROS[SZOLNOK,7]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[RIBIZLI,8]=1;
constraint NEV[DANI,1]=1;
constraint KEDVENCFOCICSAPAT[CHELSEA,8]=1;
constraint KEDVENCALLAT[TEKNOS,7]=1;
constraint KEDVENCETEL[SULTKRUMPLI,8]=1;
constraint ELETKOR[HUSZONNYOLC,3]=1;
constraint ELETKOR[HARMINCOT,11]=1;
constraint ELETKOR[HUSZONKILENC,8]=1;
constraint KEDVENCITAL[KAKAO,9]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[PAPRIKA,11]=1;
constraint MUNKA[UGYVED,7]=1;
constraint KEDVENCISKOLAITANTARGY[NEMET,14]=1;
constraint VAROS[BUDAPEST,4]=1;
constraint KEDVENCALLAT[RIGO,6]=1;
constraint KEDVENCSPORT[FUTSAL,8]=1;
constraint KEDVENCISKOLAITANTARGY[MATEK,13]=1;
constraint KEDVENCITAL[KAKAO,9]=1;
constraint KEDVENCITAL[BOR,4]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[ALMA,6]=1;
constraint VAROS[PECS,10]=1;
constraint KERESET[K680K,12]=1;
constraint ELETKOR[HUSZONHAT,12]=1;
constraint KEDVENCETEL[HUSLEVES,7]=1;
constraint KEDVENCFOCICSAPAT[LYON,6]=1;
constraint MUNKA[ELADO,6]=1;
constraint AUTO[MERCEDES,8]=1;
constraint VAROS[VAC,6]=1;
constraint KEDVENCALLAT[KUTYA,5]=1;
constraint MUNKA[KOMUVES,2]=1;
constraint KEDVENCITAL[GYUMOLCSLE,2]=1;
constraint KEDVENCSZIN[PIROS,7]=1;
constraint KEDVENCSZIN[MAGENTA,12]=1;
constraint KEDVENCFOCICSAPAT[CITY,4]=1;
constraint MUNKA[KATONA,13]=1;
constraint ELETKOR[HUSZONEGY,2]=1;
constraint VAROS[MISKOLC,5]=1;
constraint KEDVENCSPORT[IJASZAT,14]=1;
constraint KEDVENCSPORT[GOKART,5]=1;
constraint KEDVENCISKOLAITANTARGY[FIZIKA,5]=1;
constraint KEDVENCSZIN[FEHER,10]=1;
constraint ELETKOR[HARMINC,4]=1;
constraint KEDVENCETEL[SULTKRUMPLI,8]=1;

constraint forall(x in PEOPLE)(AUTO[BMW,x]=1 -> sum(szek in x+1..db)(KEDVENCFOCICSAPAT[SPURS, szek])=1);
constraint forall(x in PEOPLE)(VAROS[GYOR,x]=1 -> sum(szek in 1..x-1)(KEDVENCITAL[SOR, szek])=1);
constraint forall(x in PEOPLE)(NEV[PETRA,x]=1 -> sum(szek in x+1..db)(RUHAMARKA[FILA, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCSPORT[ROGBI,x]=1 -> sum(szek in 1..x-1)(KEDVENCSZIN[SARGA, szek])=1);
constraint forall(x in PEOPLE)(KERESET[K660K,x]=1 -> sum(szek in x+1..db)(RUHAMARKA[NIKE, szek])=1);
constraint forall(x in PEOPLE)(AUTO[SKODA,x]=1 -> sum(szek in 1..x-1)(KEDVENCSZIN[NARANCSSARGA, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCSZIN[KEK,x]=1 -> sum(szek in 1..x-1)(NEV[PETI, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCFOCICSAPAT[LIVERPOOL,x]=1 -> sum(szek in 1..x-1)(KEDVENCETEL[LECSO, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCISKOLAITANTARGY[TESI,x]=1 -> sum(szek in 1..x-1)(AUTO[RENAULT, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCITAL[KOKTEL,x]=1 -> sum(szek in x+1..db)(ELETKOR[HARMINCEGY, szek])=1);
constraint forall(x in PEOPLE)(RUHAMARKA[EVERLAST,x]=1 -> sum(szek in x+1..db)(KEDVENCSPORT[USZAS, szek])=1);
constraint forall(x in PEOPLE)(ELETKOR[HUSZONKETTO,x]=1 -> sum(szek in 1..x-1)(KEDVENCALLAT[LO, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCISKOLAITANTARGY[MATEK,x]=1 -> sum(szek in x+1..db)(MUNKA[TECHNIKUS, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCFOCICSAPAT[CITY,x]=1 -> sum(szek in x+1..db)(KEDVENCSZIN[LILA, szek])=1);
constraint forall(x in PEOPLE)(RUHAMARKA[NIKE,x]=1 -> sum(szek in 1..x-1)(AUTO[SUZUKI, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCSPORT[FUTSAL,x]=1 -> sum(szek in x+1..db)(MUNKA[BIRO, szek])=1);
constraint forall(x in PEOPLE)(VAROS[SZOLNOK,x]=1 -> sum(szek in x+1..db)(KEDVENCGYUMOLCSZOLDSEG[NARANCS, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCSPORT[ROGBI,x]=1 -> sum(szek in 1..x-1)(KERESET[K460K, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCSZIN[SZURKE,x]=1 -> sum(szek in x+1..db)(KEDVENCALLAT[TENGERIMALAC, szek])=1);
constraint forall(x in PEOPLE)(AUTO[PEUGEOT,x]=1 -> sum(szek in 1..x-1)(KEDVENCFOCICSAPAT[BARCELONA, szek])=1);
constraint forall(x in PEOPLE)(RUHAMARKA[VANS,x]=1 -> sum(szek in x+1..db)(KEDVENCITAL[TEA, szek])=1);
constraint forall(x in PEOPLE)(KEDVENCSPORT[FOCI,x]=1 -> sum(szek in x+1..db)(KEDVENCALLAT[KUTYA, szek])=1);



constraint forall(szek in 1..db-1)(NEV[DALMA,szek]=1 -> ELETKOR[HUSZONHAROM, szek+1]=1) /\ NEV[DALMA,db]=0;
constraint forall(szek in 1..db-1)(RUHAMARKA[REEBOK,szek]=1 -> RUHAMARKA[VANS, szek+1]=1) /\ RUHAMARKA[REEBOK,db]=0;
constraint forall(szek in 1..db-1)(KEDVENCGYUMOLCSZOLDSEG[BARACK,szek]=1 -> KEDVENCISKOLAITANTARGY[BIOSZ, szek+1]=1) /\ KEDVENCGYUMOLCSZOLDSEG[BARACK,db]=0;
constraint forall(szek in 2..db)(KERESET[K660K,szek]=1 -> NEV[ANDRAS, szek-1]=1) /\ KERESET[K660K,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCSPORT[FUTAS,szek]=1 -> KEDVENCALLAT[SZAMAR, szek+1]=1) /\ KEDVENCSPORT[FUTAS,db]=0;
constraint forall(szek in 2..db)(NEV[ANDRAS,szek]=1 -> KEDVENCSZIN[BARNA, szek-1]=1) /\ NEV[ANDRAS,1]=0;
constraint forall(szek in 2..db)(ELETKOR[HUSZONKETTO,szek]=1 -> NEV[MARK, szek-1]=1) /\ ELETKOR[HUSZONKETTO,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCSZIN[FEKETE,szek]=1 -> MUNKA[IRO, szek+1]=1) /\ KEDVENCSZIN[FEKETE,db]=0;
constraint forall(szek in 2..db)(NEV[PETRA,szek]=1 -> KEDVENCETEL[KENYER, szek-1]=1) /\ NEV[PETRA,1]=0;
constraint forall(szek in 2..db)(KERESET[K660K,szek]=1 -> KEDVENCSPORT[ROGBI, szek-1]=1) /\ KERESET[K660K,1]=0;
constraint forall(szek in 1..db-1)(VAROS[GYOR,szek]=1 -> AUTO[FERRARI, szek+1]=1) /\ VAROS[GYOR,db]=0;
constraint forall(szek in 2..db)(KEDVENCALLAT[TIGRIS,szek]=1 -> KEDVENCSPORT[JUDO, szek-1]=1) /\ KEDVENCALLAT[TIGRIS,1]=0;
constraint forall(szek in 2..db)(VAROS[SZEGED,szek]=1 -> NEV[GIZI, szek-1]=1) /\ VAROS[SZEGED,1]=0;
constraint forall(szek in 1..db-1)(NEV[PETRA,szek]=1 -> NEV[ZOLI, szek+1]=1) /\ NEV[PETRA,db]=0;
constraint forall(szek in 1..db-1)(RUHAMARKA[VANS,szek]=1 -> RUHAMARKA[GUCCI, szek+1]=1) /\ RUHAMARKA[VANS,db]=0;
constraint forall(szek in 2..db)(VAROS[SZEGED,szek]=1 -> RUHAMARKA[EVERLAST, szek-1]=1) /\ VAROS[SZEGED,1]=0;
constraint forall(szek in 2..db)(NEV[ANDRAS,szek]=1 -> KEDVENCFOCICSAPAT[LIVERPOOL, szek-1]=1) /\ NEV[ANDRAS,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCISKOLAITANTARGY[OLASZ,szek]=1 -> KEDVENCSZIN[SZURKE, szek+1]=1) /\ KEDVENCISKOLAITANTARGY[OLASZ,db]=0;
constraint forall(szek in 2..db)(KEDVENCGYUMOLCSZOLDSEG[BARACK,szek]=1 -> KERESET[K500K, szek-1]=1) /\ KEDVENCGYUMOLCSZOLDSEG[BARACK,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCISKOLAITANTARGY[TESI,szek]=1 -> KEDVENCGYUMOLCSZOLDSEG[BANAN, szek+1]=1) /\ KEDVENCISKOLAITANTARGY[TESI,db]=0;
constraint forall(szek in 1..db-1)(RUHAMARKA[MUSTANG,szek]=1 -> VAROS[SZOMBATHELY, szek+1]=1) /\ RUHAMARKA[MUSTANG,db]=0;
constraint forall(szek in 2..db)(MUNKA[PORTAS,szek]=1 -> KERESET[K600K, szek-1]=1) /\ MUNKA[PORTAS,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCSZIN[OKKER,szek]=1 -> VAROS[ESZTERGOM, szek+1]=1) /\ KEDVENCSZIN[OKKER,db]=0;
constraint forall(szek in 2..db)(KEDVENCALLAT[TIGRIS,szek]=1 -> AUTO[AUDI, szek-1]=1) /\ KEDVENCALLAT[TIGRIS,1]=0;
constraint forall(szek in 1..db-1)(RUHAMARKA[REEBOK,szek]=1 -> KEDVENCSZIN[FEHER, szek+1]=1) /\ RUHAMARKA[REEBOK,db]=0;
constraint forall(szek in 2..db)(NEV[DALMA,szek]=1 -> KEDVENCALLAT[FARKAS, szek-1]=1) /\ NEV[DALMA,1]=0;
constraint forall(szek in 2..db)(NEV[GIZI,szek]=1 -> VAROS[DEBRECEN, szek-1]=1) /\ NEV[GIZI,1]=0;
constraint forall(szek in 2..db)(KEDVENCALLAT[TIGRIS,szek]=1 -> KEDVENCSZIN[ZOLD, szek-1]=1) /\ KEDVENCALLAT[TIGRIS,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCSZIN[OKKER,szek]=1 -> KEDVENCFOCICSAPAT[NAPOLI, szek+1]=1) /\ KEDVENCSZIN[OKKER,db]=0;
constraint forall(szek in 1..db-1)(RUHAMARKA[MUSTANG,szek]=1 -> KEDVENCETEL[RAKOTTKRUMPLI, szek+1]=1) /\ RUHAMARKA[MUSTANG,db]=0;
constraint forall(szek in 2..db)(KEDVENCFOCICSAPAT[BAYERN,szek]=1 -> VAROS[MOR, szek-1]=1) /\ KEDVENCFOCICSAPAT[BAYERN,1]=0;
constraint forall(szek in 1..db-1)(KERESET[K500K,szek]=1 -> RUHAMARKA[OMBRE, szek+1]=1) /\ KERESET[K500K,db]=0;
constraint forall(szek in 2..db)(NEV[MARK,szek]=1 -> KEDVENCSZIN[KEK, szek-1]=1) /\ NEV[MARK,1]=0;
constraint forall(szek in 2..db)(KEDVENCALLAT[SZAMAR,szek]=1 -> KEDVENCGYUMOLCSZOLDSEG[DIO, szek-1]=1) /\ KEDVENCALLAT[SZAMAR,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCSZIN[FEKETE,szek]=1 -> ELETKOR[HUSZONHET, szek+1]=1) /\ KEDVENCSZIN[FEKETE,db]=0;
constraint forall(szek in 2..db)(NEV[JOZSI,szek]=1 -> KEDVENCGYUMOLCSZOLDSEG[KAPOSZTA, szek-1]=1) /\ NEV[JOZSI,1]=0;
constraint forall(szek in 2..db)(KEDVENCSZIN[SARGA,szek]=1 -> KEDVENCETEL[PIZZA, szek-1]=1) /\ KEDVENCSZIN[SARGA,1]=0;
constraint forall(szek in 1..db-1)(AUTO[MAZDA,szek]=1 -> KEDVENCSZIN[ARANY, szek+1]=1) /\ AUTO[MAZDA,db]=0;
constraint forall(szek in 2..db)(KEDVENCSZIN[SZURKE,szek]=1 -> KEDVENCSPORT[KARATE, szek-1]=1) /\ KEDVENCSZIN[SZURKE,1]=0;
constraint forall(szek in 2..db)(KEDVENCETEL[KENYER,szek]=1 -> MUNKA[RENDOR, szek-1]=1) /\ KEDVENCETEL[KENYER,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCFOCICSAPAT[CHELSEA,szek]=1 -> KEDVENCGYUMOLCSZOLDSEG[SZOLO, szek+1]=1) /\ KEDVENCFOCICSAPAT[CHELSEA,db]=0;
constraint forall(szek in 2..db)(RUHAMARKA[MUSTANG,szek]=1 -> KEDVENCETEL[FOZELEK, szek-1]=1) /\ RUHAMARKA[MUSTANG,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCALLAT[FARKAS,szek]=1 -> KEDVENCFOCICSAPAT[PSG, szek+1]=1) /\ KEDVENCALLAT[FARKAS,db]=0;
constraint forall(szek in 2..db)(VAROS[BUDAPEST,szek]=1 -> KERESET[K540K, szek-1]=1) /\ VAROS[BUDAPEST,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCETEL[PIZZA,szek]=1 -> RUHAMARKA[ARMANI, szek+1]=1) /\ KEDVENCETEL[PIZZA,db]=0;
constraint forall(szek in 2..db)(KERESET[K500K,szek]=1 -> RUHAMARKA[LACOSTE, szek-1]=1) /\ KERESET[K500K,1]=0;
constraint forall(szek in 2..db)(KEDVENCETEL[KENYER,szek]=1 -> KEDVENCGYUMOLCSZOLDSEG[DINNYE, szek-1]=1) /\ KEDVENCETEL[KENYER,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCGYUMOLCSZOLDSEG[KIWI,szek]=1 -> KERESET[K700K, szek+1]=1) /\ KEDVENCGYUMOLCSZOLDSEG[KIWI,db]=0;
constraint forall(szek in 2..db)(VAROS[SZOLNOK,szek]=1 -> KEDVENCITAL[KOKTEL, szek-1]=1) /\ VAROS[SZOLNOK,1]=0;
constraint forall(szek in 2..db)(KEDVENCITAL[WHISKY,szek]=1 -> MUNKA[MERNOK, szek-1]=1) /\ KEDVENCITAL[WHISKY,1]=0;
constraint forall(szek in 1..db-1)(MUNKA[TUZOLTO,szek]=1 -> KEDVENCISKOLAITANTARGY[SPANYOL, szek+1]=1) /\ MUNKA[TUZOLTO,db]=0;
constraint forall(szek in 2..db)(NEV[ANDRAS,szek]=1 -> KEDVENCITAL[KOLA, szek-1]=1) /\ NEV[ANDRAS,1]=0;
constraint forall(szek in 2..db)(RUHAMARKA[GUCCI,szek]=1 -> KEDVENCITAL[PALINKA, szek-1]=1) /\ RUHAMARKA[GUCCI,1]=0;
constraint forall(szek in 2..db)(KEDVENCITAL[GIN,szek]=1 -> KEDVENCISKOLAITANTARGY[IRODALOM, szek-1]=1) /\ KEDVENCITAL[GIN,1]=0;
constraint forall(szek in 2..db)(KEDVENCSZIN[FEKETE,szek]=1 -> ELETKOR[HARMINCHAROM, szek-1]=1) /\ KEDVENCSZIN[FEKETE,1]=0;
constraint forall(szek in 2..db)(KEDVENCISKOLAITANTARGY[IRODALOM,szek]=1 -> KEDVENCSZIN[LILA, szek-1]=1) /\ KEDVENCISKOLAITANTARGY[IRODALOM,1]=0;
constraint forall(szek in 1..db-1)(KEDVENCALLAT[TEKNOS,szek]=1 -> ELETKOR[HUSZONKILENC, szek+1]=1) /\ KEDVENCALLAT[TEKNOS,db]=0;
constraint forall(szek in 2..db)(KEDVENCETEL[LEKVAR,szek]=1 -> KEDVENCETEL[SUTI, szek-1]=1) /\ KEDVENCETEL[LEKVAR,1]=0;


solve satisfy;

int: width = -15;
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in NEVS where fix(NEV[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in ELETKORS where fix(ELETKOR[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCSZINS where fix(KEDVENCSZIN[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in AUTOS where fix(AUTO[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCALLATS where fix(KEDVENCALLAT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCFOCICSAPATS where fix(KEDVENCFOCICSAPAT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCSPORTS where fix(KEDVENCSPORT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in VAROSS where fix(VAROS[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KERESETS where fix(KERESET[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in RUHAMARKAS where fix(RUHAMARKA[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCETELS where fix(KEDVENCETEL[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCITALS where fix(KEDVENCITAL[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCGYUMOLCSZOLDSEGS where fix(KEDVENCGYUMOLCSZOLDSEG[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCISKOLAITANTARGYS where fix(KEDVENCISKOLAITANTARGY[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in MUNKAS where fix(MUNKA[n,p])=1]++["\n"];
