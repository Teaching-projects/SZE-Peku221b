include "globals.mzn";

int: db = 15;
set of int: PEOPLE = 1..db;


enum NEVS = {DANI, PETI, LACI, ANDRAS, MARK, REKA, PETRA, ZOLI, ZSOFI ,JANI, BELA, GIZI, JOZSI, DALMA, ESZTER};
enum ELETKORS = {HUSZONOT, HUSZONEGY, HUSZONNYOLC, HARMINC, HARMINCKETTO, HUSZONKETTO, HARMINCHAROM, HUSZONKILENC, HUSZONHET, HARMINCEGY, HARMINCOT, HUSZONHAT, HARMINCNEGY, HUSZONNEGY, HUSZONHAROM};
enum KEDVENCSZINS = {ZOLD, SARGA, BARNA, KEK, NARANCSSARGA, LILA, PIROS, FEKETE, ROZSASZIN, FEHER, OKKER, MAGENTA, SZURKE, BIBOR, ARANY};
enum AUTOS = {AUDI, RENAULT, FERRARI, PEUGEOT, SUZUKI, SKODA, VOLVO, MERCEDES, HONDA, TOYOTA, PORSCHE, BMW, FORD, MAZDA, NISSAN};
enum KEDVENCALLATS = {OROSZLAN, TIGRIS, LO, KECSKE, KUTYA, RIGO, TEKNOS, ROKA, MACSKA, BEKA, SZAMAR, PILLANGO, FARKAS, TENGERIMALAC, DELFIN};
enum KEDVENCFOCICSAPATS = {JUVENTUS, BARCELONA, LIVERPOOL, CITY, INTER, LYON, UNITED, CHELSEA, BAYERN, REAL, MILAN, NAPOLI, ROMA, PSG, SPURS};
enum KEDVENCSPORTS = {JUDO, KUNGFU, FOCI, ROGBI, GOKART, ROPLABDA, AEROBIK, FUTSAL, FALMASZAS, FUTAS, LOVESZET, KARATE, USZAS, IJASZAT, KOSAR};
enum VAROSS = {SZEKESFEHERVAR, GYOR, NYIREGYHAZA, BUDAPEST, MISKOLC, VAC, SZOLNOK, MOR, VESZPREM, PECS, DEBRECEN, ESZTERGOM, SZEGED, KECSKEMET, SZOMBATHELY};
enum KERESETS = {K480K, K460K, K540K, K700K, K660K, K500K, K420K, K560K, K620K, K440K, K580K, K680K, K520K, K600K, K640K};
enum RUHAMARKAS = {PUMA, ARMANI, CALVINKLEIN, ADIDAS, LACOSTE, NIKE, OMBRE, FILA, REEBOK, VANS, GUCCI, EVERLAST, CONVERSE, MUSTANG, CASIO};
enum KEDVENCETELS = {PIZZA, LECSO, RANTOTTHUS, PACAL, SPAGETTI, KENYER, HUSLEVES, SULTKRUMPLI, FAGYI, PITE, SUTI, LEKVAR, FOZELEK, PALACSINTA, RAKOTTKRUMPLI};
enum KEDVENCITALS = {SOR, GYUMOLCSLE, KOLA, BOR, VIZ, KOKTEL, SZORP, GIN, KAKAO, PALINKA, WHISKY, TEA, VODKA, TEJ, MOJITO};
enum KEDVENCGYUMOLCSZOLDSEGS = {KORTE, PARADICSOM, KIWI, BANAN, DINNYE, ALMA, BARACK, RIBIZLI, SZOLO, DIO, PAPRIKA, KAPOSZTA, NARANCS, BROKKOLI, SZILVA};
enum KEDVENCISKOLAITANTARGYS = {TORI, KEMIA, TESI, SPANYOL, FIZIKA, INFORMATIKA, IRODALOM, BIOSZ, FILOZOFIA, ANGOL, NYELVTAN, OLASZ, MATEK, NEMET, OROSZ};
enum MUNKAS = {TANAR, KOMUVES, TUZOLTO, EPITESZ, RENDOR, ELADO, UGYVED, NYOMOZO, IRO, MERNOK, BIRO, IGAZGATO, KATONA, TECHNIKUS, PORTAS};


array[NEVS, PEOPLE] of var {0, 1}: NEV;
array[ELETKORS, PEOPLE] of var {0, 1}: ELETKOR;
array[KEDVENCSZINS, PEOPLE] of var {0, 1}: KEDVENCSZIN;
array[AUTOS, PEOPLE] of var {0, 1}: AUTO;
array[KEDVENCALLATS, PEOPLE] of var {0, 1}: KEDVENCALLAT;
array[KEDVENCFOCICSAPATS, PEOPLE] of var {0, 1}: KEDVENCFOCICSAPAT;
array[KEDVENCSPORTS, PEOPLE] of var {0, 1}: KEDVENCSPORT;
array[VAROSS, PEOPLE] of var {0, 1}: VAROS;
array[KERESETS, PEOPLE] of var {0, 1}: KERESET;
array[RUHAMARKAS, PEOPLE] of var {0, 1}: RUHAMARKA;
array[KEDVENCETELS, PEOPLE] of var {0, 1}: KEDVENCETEL;
array[KEDVENCITALS, PEOPLE] of var {0, 1}: KEDVENCITAL;
array[KEDVENCGYUMOLCSZOLDSEGS, PEOPLE] of var {0, 1}: KEDVENCGYUMOLCSZOLDSEG;
array[KEDVENCISKOLAITANTARGYS, PEOPLE] of var {0, 1}: KEDVENCISKOLAITANTARGY;
array[MUNKAS, PEOPLE] of var {0, 1}: MUNKA;


constraint forall(p in PEOPLE)(sum(n in NEVS)(NEV[n, p])=1) /\ forall(n in NEVS)(sum(p in PEOPLE)(NEV[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in ELETKORS)(ELETKOR[n, p])=1) /\ forall(n in ELETKORS)(sum(p in PEOPLE)(ELETKOR[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCSZINS)(KEDVENCSZIN[n, p])=1) /\ forall(n in KEDVENCSZINS)(sum(p in PEOPLE)(KEDVENCSZIN[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in AUTOS)(AUTO[n, p])=1) /\ forall(n in AUTOS)(sum(p in PEOPLE)(AUTO[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCALLATS)(KEDVENCALLAT[n, p])=1) /\ forall(n in KEDVENCALLATS)(sum(p in PEOPLE)(KEDVENCALLAT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCFOCICSAPATS)(KEDVENCFOCICSAPAT[n, p])=1) /\ forall(n in KEDVENCFOCICSAPATS)(sum(p in PEOPLE)(KEDVENCFOCICSAPAT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCSPORTS)(KEDVENCSPORT[n, p])=1) /\ forall(n in KEDVENCSPORTS)(sum(p in PEOPLE)(KEDVENCSPORT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in VAROSS)(VAROS[n, p])=1) /\ forall(n in VAROSS)(sum(p in PEOPLE)(VAROS[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KERESETS)(KERESET[n, p])=1) /\ forall(n in KERESETS)(sum(p in PEOPLE)(KERESET[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in RUHAMARKAS)(RUHAMARKA[n, p])=1) /\ forall(n in RUHAMARKAS)(sum(p in PEOPLE)(RUHAMARKA[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCETELS)(KEDVENCETEL[n, p])=1) /\ forall(n in KEDVENCETELS)(sum(p in PEOPLE)(KEDVENCETEL[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCITALS)(KEDVENCITAL[n, p])=1) /\ forall(n in KEDVENCITALS)(sum(p in PEOPLE)(KEDVENCITAL[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCGYUMOLCSZOLDSEGS)(KEDVENCGYUMOLCSZOLDSEG[n, p])=1) /\ forall(n in KEDVENCGYUMOLCSZOLDSEGS)(sum(p in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCISKOLAITANTARGYS)(KEDVENCISKOLAITANTARGY[n, p])=1) /\ forall(n in KEDVENCISKOLAITANTARGYS)(sum(p in PEOPLE)(KEDVENCISKOLAITANTARGY[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in MUNKAS)(MUNKA[n, p])=1) /\ forall(n in MUNKAS)(sum(p in PEOPLE)(MUNKA[n, p])=1);



constraint KEDVENCALLAT[DELFIN,1]+KEDVENCALLAT[DELFIN,db]=1;
constraint KEDVENCFOCICSAPAT[SPURS,1]+KEDVENCFOCICSAPAT[SPURS,db]=1;
constraint MUNKA[TANAR,1]+MUNKA[TANAR,db]=1;
constraint NEV[ESZTER,1]+NEV[ESZTER,db]=1;
constraint KERESET[K480K,1]+KERESET[K480K,db]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[KORTE,1]+KEDVENCGYUMOLCSZOLDSEG[KORTE,db]=1;
constraint KEDVENCSPORT[KOSAR,1]+KEDVENCSPORT[KOSAR,db]=1;
constraint KEDVENCALLAT[OROSZLAN,1]+KEDVENCALLAT[OROSZLAN,db]=1;
constraint KEDVENCITAL[MOJITO,1]+KEDVENCITAL[MOJITO,db]=1;
constraint KEDVENCISKOLAITANTARGY[OROSZ,1]+KEDVENCISKOLAITANTARGY[OROSZ,db]=1;
constraint AUTO[NISSAN,1]+AUTO[NISSAN,db]=1;
constraint RUHAMARKA[CASIO,1]+RUHAMARKA[CASIO,db]=1;
constraint VAROS[SZEKESFEHERVAR,1]+VAROS[SZEKESFEHERVAR,db]=1;


constraint forall(szek in PEOPLE)(AUTO[TOYOTA,szek] = KEDVENCFOCICSAPAT[REAL, szek]);
constraint forall(szek in PEOPLE)(KEDVENCISKOLAITANTARGY[BIOSZ,szek] = KERESET[K560K, szek]);
constraint forall(szek in PEOPLE)(NEV[ANDRAS,szek] = KEDVENCETEL[PACAL, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[REAL,szek] = KEDVENCSPORT[FUTAS, szek]);
constraint forall(szek in PEOPLE)(VAROS[GYOR,szek] = KEDVENCGYUMOLCSZOLDSEG[PARADICSOM, szek]);
constraint forall(szek in PEOPLE)(KEDVENCALLAT[OROSZLAN,szek] = KEDVENCISKOLAITANTARGY[TORI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCALLAT[SZAMAR,szek] = KEDVENCSZIN[OKKER, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONKETTO,szek] = KEDVENCSPORT[ROPLABDA, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[BARNA,szek] = NEV[LACI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[ROMA,szek] = VAROS[SZEGED, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[REEBOK,szek] = KEDVENCETEL[FAGYI, szek]);
constraint forall(szek in PEOPLE)(AUTO[BMW,szek] = KEDVENCISKOLAITANTARGY[OLASZ, szek]);
constraint forall(szek in PEOPLE)(NEV[DALMA,szek] = KEDVENCITAL[TEJ, szek]);
constraint forall(szek in PEOPLE)(VAROS[GYOR,szek] = KEDVENCALLAT[TIGRIS, szek]);
constraint forall(szek in PEOPLE)(KERESET[K560K,szek] = KEDVENCSZIN[FEKETE, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[CALVINKLEIN,szek] = KEDVENCISKOLAITANTARGY[TESI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[SOR,szek] = ELETKOR[HUSZONOT, szek]);
constraint forall(szek in PEOPLE)(KEDVENCETEL[FAGYI,szek] = KEDVENCFOCICSAPAT[BAYERN, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONOT,szek] = RUHAMARKA[PUMA, szek]);
constraint forall(szek in PEOPLE)(KERESET[K500K,szek] = KEDVENCISKOLAITANTARGY[INFORMATIKA, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[GUCCI,szek] = KEDVENCITAL[WHISKY, szek]);
constraint forall(szek in PEOPLE)(NEV[MARK,szek] = KEDVENCFOCICSAPAT[INTER, szek]);
constraint forall(szek in PEOPLE)(AUTO[TOYOTA,szek] = NEV[JANI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[BARACK,szek] = KEDVENCITAL[SZORP, szek]);
constraint forall(szek in PEOPLE)(KERESET[K560K,szek] = MUNKA[NYOMOZO, szek]);
constraint forall(szek in PEOPLE)(MUNKA[IRO,szek] = NEV[ZSOFI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCISKOLAITANTARGY[OROSZ,szek] = KERESET[K640K, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONHAROM,szek] = KEDVENCGYUMOLCSZOLDSEG[SZILVA, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[CONVERSE,szek] = NEV[JOZSI, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[FEHER,szek] = KEDVENCETEL[PITE, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSPORT[FUTAS,szek] = KERESET[K440K, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[WHISKY,szek] = KEDVENCISKOLAITANTARGY[NYELVTAN, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[TEJ,szek] = AUTO[MAZDA, szek]);
constraint forall(szek in PEOPLE)(AUTO[FERRARI,szek] = VAROS[NYIREGYHAZA, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HUSZONHET,szek] = KEDVENCSPORT[FALMASZAS, szek]);
constraint forall(szek in PEOPLE)(KEDVENCITAL[TEJ,szek] = KEDVENCGYUMOLCSZOLDSEG[BROKKOLI, szek]);
constraint forall(szek in PEOPLE)(AUTO[BMW,szek] = KEDVENCETEL[LEKVAR, szek]);
constraint forall(szek in PEOPLE)(RUHAMARKA[FILA,szek] = KEDVENCITAL[GIN, szek]);
constraint forall(szek in PEOPLE)(MUNKA[IRO,szek] = KEDVENCALLAT[MACSKA, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[SZURKE,szek] = KEDVENCITAL[VODKA, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSZIN[KEK,szek] = AUTO[PEUGEOT, szek]);
constraint forall(szek in PEOPLE)(KEDVENCISKOLAITANTARGY[MATEK,szek] = ELETKOR[HARMINCNEGY, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[NARANCS,szek] = ELETKOR[HARMINCNEGY, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[PSG,szek] = KEDVENCSZIN[BIBOR, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[DIO,szek] = KEDVENCISKOLAITANTARGY[ANGOL, szek]);
constraint forall(szek in PEOPLE)(KEDVENCALLAT[TEKNOS,szek] = AUTO[VOLVO, szek]);
constraint forall(szek in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[BANAN,szek] = KEDVENCALLAT[KECSKE, szek]);
constraint forall(szek in PEOPLE)(KEDVENCETEL[LECSO,szek] = KEDVENCSPORT[KUNGFU, szek]);
constraint forall(szek in PEOPLE)(ELETKOR[HARMINCEGY,szek] = KEDVENCALLAT[BEKA, szek]);
constraint forall(szek in PEOPLE)(VAROS[MISKOLC,szek] = KEDVENCETEL[SPAGETTI, szek]);
constraint forall(szek in PEOPLE)(MUNKA[BIRO,szek] = AUTO[PORSCHE, szek]);
constraint forall(szek in PEOPLE)(KEDVENCETEL[HUSLEVES,szek] = KEDVENCSPORT[AEROBIK, szek]);
constraint forall(szek in PEOPLE)(VAROS[SZEGED,szek] = KERESET[K520K, szek]);
constraint forall(szek in PEOPLE)(KEDVENCFOCICSAPAT[BAYERN,szek] = KERESET[K620K, szek]);
constraint forall(szek in PEOPLE)(KEDVENCSPORT[KUNGFU,szek] = KEDVENCGYUMOLCSZOLDSEG[PARADICSOM, szek]);


constraint forall(x in PEOPLE)(AUTO[TOYOTA, x] <= sum(p in 1..x-1)(NEV[REKA, p])) /\ forall(x in PEOPLE)(KEDVENCSZIN[BARNA, x] <= sum(p in x+1..db)(NEV[REKA, p]));
constraint forall(x in PEOPLE)(KEDVENCISKOLAITANTARGY[OROSZ, x] <= sum(p in 1..x-1)(RUHAMARKA[CONVERSE, p])) /\ forall(x in PEOPLE)(KEDVENCFOCICSAPAT[BAYERN, x] <= sum(p in x+1..db)(RUHAMARKA[CONVERSE, p]));
constraint forall(x in PEOPLE)(KEDVENCSPORT[KOSAR, x] <= sum(p in 1..x-1)(VAROS[KECSKEMET, p])) /\ forall(x in PEOPLE)(KEDVENCSZIN[OKKER, x] <= sum(p in x+1..db)(VAROS[KECSKEMET, p]));
constraint forall(x in PEOPLE)(KEDVENCSZIN[FEKETE, x] <= sum(p in 1..x-1)(KERESET[K420K, p])) /\ forall(x in PEOPLE)(KEDVENCFOCICSAPAT[INTER, x] <= sum(p in x+1..db)(KERESET[K420K, p]));
constraint forall(x in PEOPLE)(KEDVENCITAL[TEJ, x] <= sum(p in 1..x-1)(NEV[BELA, p])) /\ forall(x in PEOPLE)(KEDVENCISKOLAITANTARGY[TESI, x] <= sum(p in x+1..db)(NEV[BELA, p]));
constraint forall(x in PEOPLE)(VAROS[SZEGED, x] <= sum(p in 1..x-1)(KEDVENCFOCICSAPAT[MILAN, p])) /\ forall(x in PEOPLE)(NEV[JANI, x] <= sum(p in x+1..db)(KEDVENCFOCICSAPAT[MILAN, p]));
constraint forall(x in PEOPLE)(VAROS[MISKOLC, x] <= sum(p in 1..x-1)(ELETKOR[HARMINC, p])) /\ forall(x in PEOPLE)(AUTO[FERRARI, x] <= sum(p in x+1..db)(ELETKOR[HARMINC, p]));
constraint forall(x in PEOPLE)(AUTO[NISSAN, x] <= sum(p in 1..x-1)(ELETKOR[HUSZONNEGY, p])) /\ forall(x in PEOPLE)(MUNKA[IGAZGATO, x] <= sum(p in x+1..db)(ELETKOR[HUSZONNEGY, p]));
constraint forall(x in PEOPLE)(KERESET[K680K, x] <= sum(p in 1..x-1)(KEDVENCISKOLAITANTARGY[FILOZOFIA, p])) /\ forall(x in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[BARACK, x] <= sum(p in x+1..db)(KEDVENCISKOLAITANTARGY[FILOZOFIA, p]));
constraint forall(x in PEOPLE)(KEDVENCITAL[VIZ, x] <= sum(p in 1..x-1)(MUNKA[EPITESZ, p])) /\ forall(x in PEOPLE)(AUTO[AUDI, x] <= sum(p in x+1..db)(MUNKA[EPITESZ, p]));
constraint forall(x in PEOPLE)(VAROS[BUDAPEST, x] <= sum(p in 1..x-1)(KEDVENCISKOLAITANTARGY[KEMIA, p])) /\ forall(x in PEOPLE)(KERESET[K480K, x] <= sum(p in x+1..db)(KEDVENCISKOLAITANTARGY[KEMIA, p]));
constraint forall(x in PEOPLE)(KEDVENCITAL[KAKAO, x] <= sum(p in 1..x-1)(KEDVENCISKOLAITANTARGY[FIZIKA, p])) /\ forall(x in PEOPLE)(KEDVENCSZIN[BARNA, x] <= sum(p in x+1..db)(KEDVENCISKOLAITANTARGY[FIZIKA, p]));
constraint forall(x in PEOPLE)(AUTO[BMW, x] <= sum(p in 1..x-1)(KEDVENCSZIN[ROZSASZIN, p])) /\ forall(x in PEOPLE)(ELETKOR[HARMINCHAROM, x] <= sum(p in x+1..db)(KEDVENCSZIN[ROZSASZIN, p]));
constraint forall(x in PEOPLE)(VAROS[PECS, x] <= sum(p in 1..x-1)(KEDVENCFOCICSAPAT[UNITED, p])) /\ forall(x in PEOPLE)(KEDVENCALLAT[KUTYA, x] <= sum(p in x+1..db)(KEDVENCFOCICSAPAT[UNITED, p]));
constraint forall(x in PEOPLE)(KEDVENCALLAT[SZAMAR, x] <= sum(p in 1..x-1)(AUTO[HONDA, p])) /\ forall(x in PEOPLE)(KEDVENCSZIN[FEKETE, x] <= sum(p in x+1..db)(AUTO[HONDA, p]));
constraint forall(x in PEOPLE)(KEDVENCSPORT[KOSAR, x] <= sum(p in 1..x-1)(AUTO[FORD, p])) /\ forall(x in PEOPLE)(ELETKOR[HARMINCEGY, x] <= sum(p in x+1..db)(AUTO[FORD, p]));
constraint forall(x in PEOPLE)(KEDVENCITAL[WHISKY, x] <= sum(p in 1..x-1)(KEDVENCALLAT[ROKA, p])) /\ forall(x in PEOPLE)(AUTO[VOLVO, x] <= sum(p in x+1..db)(KEDVENCALLAT[ROKA, p]));
constraint forall(x in PEOPLE)(KEDVENCSPORT[IJASZAT, x] <= sum(p in 1..x-1)(KEDVENCALLAT[PILLANGO, p])) /\ forall(x in PEOPLE)(ELETKOR[HUSZONKILENC, x] <= sum(p in x+1..db)(KEDVENCALLAT[PILLANGO, p]));
constraint forall(x in PEOPLE)(KEDVENCISKOLAITANTARGY[OROSZ, x] <= sum(p in 1..x-1)(KEDVENCETEL[PALACSINTA, p])) /\ forall(x in PEOPLE)(KERESET[K680K, x] <= sum(p in x+1..db)(KEDVENCETEL[PALACSINTA, p]));
constraint forall(x in PEOPLE)(KEDVENCITAL[BOR, x] <= sum(p in 1..x-1)(KEDVENCGYUMOLCSZOLDSEG[KIWI, p])) /\ forall(x in PEOPLE)(KEDVENCETEL[LECSO, x] <= sum(p in x+1..db)(KEDVENCGYUMOLCSZOLDSEG[KIWI, p]));
constraint forall(x in PEOPLE)(RUHAMARKA[MUSTANG, x] <= sum(p in 1..x-1)(KEDVENCSPORT[LOVESZET, p])) /\ forall(x in PEOPLE)(MUNKA[MERNOK, x] <= sum(p in x+1..db)(KEDVENCSPORT[LOVESZET, p]));
constraint forall(x in PEOPLE)(KEDVENCALLAT[KUTYA, x] <= sum(p in 1..x-1)(KEDVENCETEL[RANTOTTHUS, p])) /\ forall(x in PEOPLE)(VAROS[GYOR, x] <= sum(p in x+1..db)(KEDVENCETEL[RANTOTTHUS, p]));
constraint forall(x in PEOPLE)(KEDVENCITAL[KOKTEL, x] <= sum(p in 1..x-1)(RUHAMARKA[ADIDAS, p])) /\ forall(x in PEOPLE)(KEDVENCALLAT[TIGRIS, x] <= sum(p in x+1..db)(RUHAMARKA[ADIDAS, p]));
constraint forall(x in PEOPLE)(ELETKOR[HARMINCOT, x] <= sum(p in 1..x-1)(VAROS[VESZPREM, p])) /\ forall(x in PEOPLE)(KEDVENCFOCICSAPAT[UNITED, x] <= sum(p in x+1..db)(VAROS[VESZPREM, p]));
constraint forall(x in PEOPLE)(MUNKA[KATONA, x] <= sum(p in 1..x-1)(KERESET[K580K, p])) /\ forall(x in PEOPLE)(KEDVENCETEL[HUSLEVES, x] <= sum(p in x+1..db)(KERESET[K580K, p]));
constraint forall(x in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[BROKKOLI, x] <= sum(p in 1..x-1)(KEDVENCETEL[SUTI, p])) /\ forall(x in PEOPLE)(KEDVENCSPORT[FALMASZAS, x] <= sum(p in x+1..db)(KEDVENCETEL[SUTI, p]));


constraint ELETKOR[HUSZONKETTO,6]=1;
constraint AUTO[BMW,12]=1;
constraint RUHAMARKA[REEBOK,9]=1;
constraint KEDVENCITAL[VIZ,5]=1;
constraint VAROS[GYOR,2]=1;
constraint KEDVENCISKOLAITANTARGY[BIOSZ,8]=1;
constraint KERESET[K660K,5]=1;
constraint NEV[DALMA,14]=1;
constraint AUTO[TOYOTA,10]=1;
constraint MUNKA[TUZOLTO,3]=1;
constraint KEDVENCALLAT[OROSZLAN,1]=1;
constraint KEDVENCFOCICSAPAT[ROMA,13]=1;
constraint KEDVENCFOCICSAPAT[JUVENTUS,1]=1;
constraint NEV[PETRA,7]=1;
constraint AUTO[SKODA,6]=1;
constraint RUHAMARKA[MUSTANG,14]=1;
constraint MUNKA[PORTAS,15]=1;
constraint RUHAMARKA[CALVINKLEIN,3]=1;
constraint MUNKA[IGAZGATO,12]=1;
constraint VAROS[SZOLNOK,7]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[RIBIZLI,8]=1;
constraint NEV[DANI,1]=1;
constraint KEDVENCFOCICSAPAT[CHELSEA,8]=1;
constraint KEDVENCALLAT[TEKNOS,7]=1;
constraint KEDVENCETEL[SULTKRUMPLI,8]=1;
constraint ELETKOR[HUSZONNYOLC,3]=1;
constraint ELETKOR[HARMINCOT,11]=1;
constraint ELETKOR[HUSZONKILENC,8]=1;
constraint KEDVENCITAL[KAKAO,9]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[PAPRIKA,11]=1;
constraint MUNKA[UGYVED,7]=1;
constraint KEDVENCISKOLAITANTARGY[NEMET,14]=1;
constraint VAROS[BUDAPEST,4]=1;
constraint KEDVENCALLAT[RIGO,6]=1;
constraint KEDVENCSPORT[FUTSAL,8]=1;
constraint KEDVENCISKOLAITANTARGY[MATEK,13]=1;
constraint KEDVENCITAL[KAKAO,9]=1;
constraint KEDVENCITAL[BOR,4]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[ALMA,6]=1;
constraint VAROS[PECS,10]=1;
constraint KERESET[K680K,12]=1;
constraint ELETKOR[HUSZONHAT,12]=1;
constraint KEDVENCETEL[HUSLEVES,7]=1;
constraint KEDVENCFOCICSAPAT[LYON,6]=1;
constraint MUNKA[ELADO,6]=1;
constraint AUTO[MERCEDES,8]=1;
constraint VAROS[VAC,6]=1;
constraint KEDVENCALLAT[KUTYA,5]=1;
constraint MUNKA[KOMUVES,2]=1;
constraint KEDVENCITAL[GYUMOLCSLE,2]=1;
constraint KEDVENCSZIN[PIROS,7]=1;
constraint KEDVENCSZIN[MAGENTA,12]=1;
constraint KEDVENCFOCICSAPAT[CITY,4]=1;
constraint MUNKA[KATONA,13]=1;
constraint ELETKOR[HUSZONEGY,2]=1;
constraint VAROS[MISKOLC,5]=1;
constraint KEDVENCSPORT[IJASZAT,14]=1;
constraint KEDVENCSPORT[GOKART,5]=1;
constraint KEDVENCISKOLAITANTARGY[FIZIKA,5]=1;
constraint KEDVENCSZIN[FEHER,10]=1;
constraint ELETKOR[HARMINC,4]=1;
constraint KEDVENCETEL[SULTKRUMPLI,8]=1;


constraint forall(x in PEOPLE)(AUTO[BMW, x] <= sum(p in x+1..db)(KEDVENCFOCICSAPAT[SPURS, p]));
constraint forall(x in PEOPLE)(VAROS[GYOR, x] <= sum(p in 1..x-1)(KEDVENCITAL[SOR, p]));
constraint forall(x in PEOPLE)(NEV[PETRA, x] <= sum(p in x+1..db)(RUHAMARKA[FILA, p]));
constraint forall(x in PEOPLE)(KEDVENCSPORT[ROGBI, x] <= sum(p in 1..x-1)(KEDVENCSZIN[SARGA, p]));
constraint forall(x in PEOPLE)(KERESET[K660K, x] <= sum(p in x+1..db)(RUHAMARKA[NIKE, p]));
constraint forall(x in PEOPLE)(AUTO[SKODA, x] <= sum(p in 1..x-1)(KEDVENCSZIN[NARANCSSARGA, p]));
constraint forall(x in PEOPLE)(KEDVENCSZIN[KEK, x] <= sum(p in 1..x-1)(NEV[PETI, p]));
constraint forall(x in PEOPLE)(KEDVENCFOCICSAPAT[LIVERPOOL, x] <= sum(p in 1..x-1)(KEDVENCETEL[LECSO, p]));
constraint forall(x in PEOPLE)(KEDVENCISKOLAITANTARGY[TESI, x] <= sum(p in 1..x-1)(AUTO[RENAULT, p]));
constraint forall(x in PEOPLE)(KEDVENCITAL[KOKTEL, x] <= sum(p in x+1..db)(ELETKOR[HARMINCEGY, p]));
constraint forall(x in PEOPLE)(RUHAMARKA[EVERLAST, x] <= sum(p in x+1..db)(KEDVENCSPORT[USZAS, p]));
constraint forall(x in PEOPLE)(ELETKOR[HUSZONKETTO, x] <= sum(p in 1..x-1)(KEDVENCALLAT[LO, p]));
constraint forall(x in PEOPLE)(KEDVENCISKOLAITANTARGY[MATEK, x] <= sum(p in x+1..db)(MUNKA[TECHNIKUS, p]));
constraint forall(x in PEOPLE)(KEDVENCFOCICSAPAT[CITY, x] <= sum(p in x+1..db)(KEDVENCSZIN[LILA, p]));
constraint forall(x in PEOPLE)(RUHAMARKA[NIKE, x] <= sum(p in 1..x-1)(AUTO[SUZUKI, p]));
constraint forall(x in PEOPLE)(KEDVENCSPORT[FUTSAL, x] <= sum(p in x+1..db)(MUNKA[BIRO, p]));
constraint forall(x in PEOPLE)(VAROS[SZOLNOK, x] <= sum(p in x+1..db)(KEDVENCGYUMOLCSZOLDSEG[NARANCS, p]));
constraint forall(x in PEOPLE)(KEDVENCSPORT[ROGBI, x] <= sum(p in 1..x-1)(KERESET[K460K, p]));
constraint forall(x in PEOPLE)(KEDVENCSZIN[SZURKE, x] <= sum(p in x+1..db)(KEDVENCALLAT[TENGERIMALAC, p]));
constraint forall(x in PEOPLE)(AUTO[PEUGEOT, x] <= sum(p in 1..x-1)(KEDVENCFOCICSAPAT[BARCELONA, p]));
constraint forall(x in PEOPLE)(RUHAMARKA[VANS, x] <= sum(p in x+1..db)(KEDVENCITAL[TEA, p]));
constraint forall(x in PEOPLE)(KEDVENCSPORT[FOCI, x] <= sum(p in x+1..db)(KEDVENCALLAT[KUTYA, p]));


constraint forall(p in 1..db-1)(NEV[DALMA, p] = ELETKOR[HUSZONHAROM, p+1]);
constraint forall(p in 1..db-1)(RUHAMARKA[REEBOK, p] = RUHAMARKA[VANS, p+1]);
constraint forall(p in 1..db-1)(KEDVENCGYUMOLCSZOLDSEG[BARACK, p] = KEDVENCISKOLAITANTARGY[BIOSZ, p+1]);
constraint forall(p in 2..db)(KERESET[K660K, p] = NEV[ANDRAS, p-1]);
constraint forall(p in 1..db-1)(KEDVENCSPORT[FUTAS, p] = KEDVENCALLAT[SZAMAR, p+1]);
constraint forall(p in 2..db)(NEV[ANDRAS, p] = KEDVENCSZIN[BARNA, p-1]);
constraint forall(p in 2..db)(ELETKOR[HUSZONKETTO, p] = NEV[MARK, p-1]);
constraint forall(p in 1..db-1)(KEDVENCSZIN[FEKETE, p] = MUNKA[IRO, p+1]);
constraint forall(p in 2..db)(NEV[PETRA, p] = KEDVENCETEL[KENYER, p-1]);
constraint forall(p in 2..db)(KERESET[K660K, p] = KEDVENCSPORT[ROGBI, p-1]);
constraint forall(p in 1..db-1)(VAROS[GYOR, p] = AUTO[FERRARI, p+1]);
constraint forall(p in 2..db)(KEDVENCALLAT[TIGRIS, p] = KEDVENCSPORT[JUDO, p-1]);
constraint forall(p in 2..db)(VAROS[SZEGED, p] = NEV[GIZI, p-1]);
constraint forall(p in 1..db-1)(NEV[PETRA, p] = NEV[ZOLI, p+1]);
constraint forall(p in 1..db-1)(RUHAMARKA[VANS, p] = RUHAMARKA[GUCCI, p+1]);
constraint forall(p in 2..db)(VAROS[SZEGED, p] = RUHAMARKA[EVERLAST, p-1]);
constraint forall(p in 2..db)(NEV[ANDRAS, p] = KEDVENCFOCICSAPAT[LIVERPOOL, p-1]);
constraint forall(p in 1..db-1)(KEDVENCISKOLAITANTARGY[OLASZ, p] = KEDVENCSZIN[SZURKE, p+1]);
constraint forall(p in 2..db)(KEDVENCGYUMOLCSZOLDSEG[BARACK, p] = KERESET[K500K, p-1]);
constraint forall(p in 1..db-1)(KEDVENCISKOLAITANTARGY[TESI, p] = KEDVENCGYUMOLCSZOLDSEG[BANAN, p+1]);
constraint forall(p in 1..db-1)(RUHAMARKA[MUSTANG, p] = VAROS[SZOMBATHELY, p+1]);
constraint forall(p in 2..db)(MUNKA[PORTAS, p] = KERESET[K600K, p-1]);
constraint forall(p in 1..db-1)(KEDVENCSZIN[OKKER, p] = VAROS[ESZTERGOM, p+1]);
constraint forall(p in 2..db)(KEDVENCALLAT[TIGRIS, p] = AUTO[AUDI, p-1]);
constraint forall(p in 1..db-1)(RUHAMARKA[REEBOK, p] = KEDVENCSZIN[FEHER, p+1]);
constraint forall(p in 2..db)(NEV[DALMA, p] = KEDVENCALLAT[FARKAS, p-1]);
constraint forall(p in 2..db)(NEV[GIZI, p] = VAROS[DEBRECEN, p-1]);
constraint forall(p in 2..db)(KEDVENCALLAT[TIGRIS, p] = KEDVENCSZIN[ZOLD, p-1]);
constraint forall(p in 1..db-1)(KEDVENCSZIN[OKKER, p] = KEDVENCFOCICSAPAT[NAPOLI, p+1]);
constraint forall(p in 1..db-1)(RUHAMARKA[MUSTANG, p] = KEDVENCETEL[RAKOTTKRUMPLI, p+1]);
constraint forall(p in 2..db)(KEDVENCFOCICSAPAT[BAYERN, p] = VAROS[MOR, p-1]);
constraint forall(p in 1..db-1)(KERESET[K500K, p] = RUHAMARKA[OMBRE, p+1]);
constraint forall(p in 2..db)(NEV[MARK, p] = KEDVENCSZIN[KEK, p-1]);
constraint forall(p in 2..db)(KEDVENCALLAT[SZAMAR, p] = KEDVENCGYUMOLCSZOLDSEG[DIO, p-1]);
constraint forall(p in 1..db-1)(KEDVENCSZIN[FEKETE, p] = ELETKOR[HUSZONHET, p+1]);
constraint forall(p in 2..db)(NEV[JOZSI, p] = KEDVENCGYUMOLCSZOLDSEG[KAPOSZTA, p-1]);
constraint forall(p in 2..db)(KEDVENCSZIN[SARGA, p] = KEDVENCETEL[PIZZA, p-1]);
constraint forall(p in 1..db-1)(AUTO[MAZDA, p] = KEDVENCSZIN[ARANY, p+1]);
constraint forall(p in 2..db)(KEDVENCSZIN[SZURKE, p] = KEDVENCSPORT[KARATE, p-1]);
constraint forall(p in 2..db)(KEDVENCETEL[KENYER, p] = MUNKA[RENDOR, p-1]);
constraint forall(p in 1..db-1)(KEDVENCFOCICSAPAT[CHELSEA, p] = KEDVENCGYUMOLCSZOLDSEG[SZOLO, p+1]);
constraint forall(p in 2..db)(RUHAMARKA[MUSTANG, p] = KEDVENCETEL[FOZELEK, p-1]);
constraint forall(p in 1..db-1)(KEDVENCALLAT[FARKAS, p] = KEDVENCFOCICSAPAT[PSG, p+1]);
constraint forall(p in 2..db)(VAROS[BUDAPEST, p] = KERESET[K540K, p-1]);
constraint forall(p in 1..db-1)(KEDVENCETEL[PIZZA, p] = RUHAMARKA[ARMANI, p+1]);
constraint forall(p in 2..db)(KERESET[K500K, p] = RUHAMARKA[LACOSTE, p-1]);
constraint forall(p in 2..db)(KEDVENCETEL[KENYER, p] = KEDVENCGYUMOLCSZOLDSEG[DINNYE, p-1]);
constraint forall(p in 1..db-1)(KEDVENCGYUMOLCSZOLDSEG[KIWI, p] = KERESET[K700K, p+1]);
constraint forall(p in 2..db)(VAROS[SZOLNOK, p] = KEDVENCITAL[KOKTEL, p-1]);
constraint forall(p in 2..db)(KEDVENCITAL[WHISKY, p] = MUNKA[MERNOK, p-1]);
constraint forall(p in 1..db-1)(MUNKA[TUZOLTO, p] = KEDVENCISKOLAITANTARGY[SPANYOL, p+1]);
constraint forall(p in 2..db)(NEV[ANDRAS, p] = KEDVENCITAL[KOLA, p-1]);
constraint forall(p in 2..db)(RUHAMARKA[GUCCI, p] = KEDVENCITAL[PALINKA, p-1]);
constraint forall(p in 2..db)(KEDVENCITAL[GIN, p] = KEDVENCISKOLAITANTARGY[IRODALOM, p-1]);
constraint forall(p in 2..db)(KEDVENCSZIN[FEKETE, p] = ELETKOR[HARMINCHAROM, p-1]);
constraint forall(p in 2..db)(KEDVENCISKOLAITANTARGY[IRODALOM, p] = KEDVENCSZIN[LILA, p-1]);
constraint forall(p in 1..db-1)(KEDVENCALLAT[TEKNOS, p] = ELETKOR[HUSZONKILENC, p+1]);
constraint forall(p in 2..db)(KEDVENCETEL[LEKVAR, p] = KEDVENCETEL[SUTI, p-1]);
constraint forall(p in 2..db)(NEV[REKA, p] = NEV[MARK, p-1]);

solve satisfy;

int: width = -15;
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in NEVS where fix(NEV[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in ELETKORS where fix(ELETKOR[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCSZINS where fix(KEDVENCSZIN[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in AUTOS where fix(AUTO[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCALLATS where fix(KEDVENCALLAT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCFOCICSAPATS where fix(KEDVENCFOCICSAPAT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCSPORTS where fix(KEDVENCSPORT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in VAROSS where fix(VAROS[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KERESETS where fix(KERESET[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in RUHAMARKAS where fix(RUHAMARKA[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCETELS where fix(KEDVENCETEL[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCITALS where fix(KEDVENCITAL[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCGYUMOLCSZOLDSEGS where fix(KEDVENCGYUMOLCSZOLDSEG[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCISKOLAITANTARGYS where fix(KEDVENCISKOLAITANTARGY[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in MUNKAS where fix(MUNKA[n,p])=1]++["\n"];