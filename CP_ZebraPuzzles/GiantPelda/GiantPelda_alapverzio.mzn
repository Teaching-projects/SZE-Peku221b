include "globals.mzn";

int: db = 15;
set of int: PEOPLE = 1..db;


enum NEVS = {DANI, PETI, LACI, ANDRAS, MARK, REKA, PETRA, ZOLI, ZSOFI ,JANI, BELA, GIZI, JOZSI, DALMA, ESZTER};
enum ELETKORS = {HUSZONOT, HUSZONEGY, HUSZONNYOLC, HARMINC, HARMINCKETTO, HUSZONKETTO, HARMINCHAROM, HUSZONKILENC, HUSZONHET, HARMINCEGY, HARMINCOT, HUSZONHAT, HARMINCNEGY, HUSZONNEGY, HUSZONHAROM};
enum KEDVENCSZINS = {ZOLD, SARGA, BARNA, KEK, NARANCSSARGA, LILA, PIROS, FEKETE, ROZSASZIN, FEHER, OKKER, MAGENTA, SZURKE, BIBOR, ARANY};
enum AUTOS = {AUDI, RENAULT, FERRARI, PEUGEOT, SUZUKI, SKODA, VOLVO, MERCEDES, HONDA, TOYOTA, PORSCHE, BMW, FORD, MAZDA, NISSAN};
enum KEDVENCALLATS = {OROSZLAN, TIGRIS, LO, KECSKE, KUTYA, RIGO, TEKNOS, ROKA, MACSKA, BEKA, SZAMAR, PILLANGO, FARKAS, TENGERIMALAC, DELFIN};
enum KEDVENCFOCICSAPATS = {JUVENTUS, BARCELONA, LIVERPOOL, CITY, INTER, LYON, UNITED, CHELSEA, BAYERN, REAL, MILAN, NAPOLI, ROMA, PSG, SPURS};
enum KEDVENCSPORTS = {JUDO, KUNGFU, FOCI, ROGBI, GOKART, ROPLABDA, AEROBIK, FUTSAL, FALMASZAS, FUTAS, LOVESZET, KARATE, USZAS, IJASZAT, KOSAR};
enum VAROSS = {SZEKESFEHERVAR, GYOR, NYIREGYHAZA, BUDAPEST, MISKOLC, VAC, SZOLNOK, MOR, VESZPREM, PECS, DEBRECEN, ESZTERGOM, SZEGED, KECSKEMET, SZOMBATHELY};
enum KERESETS = {K480K, K460K, K540K, K700K, K660K, K500K, K420K, K560K, K620K, K440K, K580K, K680K, K520K, K600K, K640K};
enum RUHAMARKAS = {PUMA, ARMANI, CALVINKLEIN, ADIDAS, LACOSTE, NIKE, OMBRE, FILA, REEBOK, VANS, GUCCI, EVERLAST, CONVERSE, MUSTANG, CASIO};
enum KEDVENCETELS = {PIZZA, LECSO, RANTOTTHUS, PACAL, SPAGETTI, KENYER, HUSLEVES, SULTKRUMPLI, FAGYI, PITE, SUTI, LEKVAR, FOZELEK, PALACSINTA, RAKOTTKRUMPLI};
enum KEDVENCITALS = {SOR, GYUMOLCSLE, KOLA, BOR, VIZ, KOKTEL, SZORP, GIN, KAKAO, PALINKA, WHISKY, TEA, VODKA, TEJ, MOJITO};
enum KEDVENCGYUMOLCSZOLDSEGS = {KORTE, PARADICSOM, KIWI, BANAN, DINNYE, ALMA, BARACK, RIBIZLI, SZOLO, DIO, PAPRIKA, KAPOSZTA, NARANCS, BROKKOLI, SZILVA};
enum KEDVENCISKOLAITANTARGYS = {TORI, KEMIA, TESI, SPANYOL, FIZIKA, INFORMATIKA, IRODALOM, BIOSZ, FILOZOFIA, ANGOL, NYELVTAN, OLASZ, MATEK, NEMET, OROSZ};
enum MUNKAS = {TANAR, KOMUVES, TUZOLTO, EPITESZ, RENDOR, ELADO, UGYVED, NYOMOZO, IRO, MERNOK, BIRO, IGAZGATO, KATONA, TECHNIKUS, PORTAS};


array[NEVS, PEOPLE] of var {0, 1}: NEV;
array[ELETKORS, PEOPLE] of var {0, 1}: ELETKOR;
array[KEDVENCSZINS, PEOPLE] of var {0, 1}: KEDVENCSZIN;
array[AUTOS, PEOPLE] of var {0, 1}: AUTO;
array[KEDVENCALLATS, PEOPLE] of var {0, 1}: KEDVENCALLAT;
array[KEDVENCFOCICSAPATS, PEOPLE] of var {0, 1}: KEDVENCFOCICSAPAT;
array[KEDVENCSPORTS, PEOPLE] of var {0, 1}: KEDVENCSPORT;
array[VAROSS, PEOPLE] of var {0, 1}: VAROS;
array[KERESETS, PEOPLE] of var {0, 1}: KERESET;
array[RUHAMARKAS, PEOPLE] of var {0, 1}: RUHAMARKA;
array[KEDVENCETELS, PEOPLE] of var {0, 1}: KEDVENCETEL;
array[KEDVENCITALS, PEOPLE] of var {0, 1}: KEDVENCITAL;
array[KEDVENCGYUMOLCSZOLDSEGS, PEOPLE] of var {0, 1}: KEDVENCGYUMOLCSZOLDSEG;
array[KEDVENCISKOLAITANTARGYS, PEOPLE] of var {0, 1}: KEDVENCISKOLAITANTARGY;
array[MUNKAS, PEOPLE] of var {0, 1}: MUNKA;


constraint forall(p in PEOPLE)(sum(n in NEVS)(NEV[n, p])=1) /\ forall(n in NEVS)(sum(p in PEOPLE)(NEV[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in ELETKORS)(ELETKOR[n, p])=1) /\ forall(n in ELETKORS)(sum(p in PEOPLE)(ELETKOR[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCSZINS)(KEDVENCSZIN[n, p])=1) /\ forall(n in KEDVENCSZINS)(sum(p in PEOPLE)(KEDVENCSZIN[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in AUTOS)(AUTO[n, p])=1) /\ forall(n in AUTOS)(sum(p in PEOPLE)(AUTO[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCALLATS)(KEDVENCALLAT[n, p])=1) /\ forall(n in KEDVENCALLATS)(sum(p in PEOPLE)(KEDVENCALLAT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCFOCICSAPATS)(KEDVENCFOCICSAPAT[n, p])=1) /\ forall(n in KEDVENCFOCICSAPATS)(sum(p in PEOPLE)(KEDVENCFOCICSAPAT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCSPORTS)(KEDVENCSPORT[n, p])=1) /\ forall(n in KEDVENCSPORTS)(sum(p in PEOPLE)(KEDVENCSPORT[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in VAROSS)(VAROS[n, p])=1) /\ forall(n in VAROSS)(sum(p in PEOPLE)(VAROS[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KERESETS)(KERESET[n, p])=1) /\ forall(n in KERESETS)(sum(p in PEOPLE)(KERESET[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in RUHAMARKAS)(RUHAMARKA[n, p])=1) /\ forall(n in RUHAMARKAS)(sum(p in PEOPLE)(RUHAMARKA[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCETELS)(KEDVENCETEL[n, p])=1) /\ forall(n in KEDVENCETELS)(sum(p in PEOPLE)(KEDVENCETEL[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCITALS)(KEDVENCITAL[n, p])=1) /\ forall(n in KEDVENCITALS)(sum(p in PEOPLE)(KEDVENCITAL[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCGYUMOLCSZOLDSEGS)(KEDVENCGYUMOLCSZOLDSEG[n, p])=1) /\ forall(n in KEDVENCGYUMOLCSZOLDSEGS)(sum(p in PEOPLE)(KEDVENCGYUMOLCSZOLDSEG[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in KEDVENCISKOLAITANTARGYS)(KEDVENCISKOLAITANTARGY[n, p])=1) /\ forall(n in KEDVENCISKOLAITANTARGYS)(sum(p in PEOPLE)(KEDVENCISKOLAITANTARGY[n, p])=1);
constraint forall(p in PEOPLE)(sum(n in MUNKAS)(MUNKA[n, p])=1) /\ forall(n in MUNKAS)(sum(p in PEOPLE)(MUNKA[n, p])=1);


constraint KEDVENCALLAT[DELFIN,1]+KEDVENCALLAT[DELFIN,db]=1;
constraint KEDVENCFOCICSAPAT[SPURS,1]+KEDVENCFOCICSAPAT[SPURS,db]=1;
constraint MUNKA[TANAR,1]+MUNKA[TANAR,db]=1;
constraint NEV[ESZTER,1]+NEV[ESZTER,db]=1;
constraint KERESET[K480K,1]+KERESET[K480K,db]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[KORTE,1]+KEDVENCGYUMOLCSZOLDSEG[KORTE,db]=1;
constraint KEDVENCSPORT[KOSAR,1]+KEDVENCSPORT[KOSAR,db]=1;
constraint KEDVENCALLAT[OROSZLAN,1]+KEDVENCALLAT[OROSZLAN,db]=1;
constraint KEDVENCITAL[MOJITO,1]+KEDVENCITAL[MOJITO,db]=1;
constraint KEDVENCISKOLAITANTARGY[OROSZ,1]+KEDVENCISKOLAITANTARGY[OROSZ,db]=1;
constraint AUTO[NISSAN,1]+AUTO[NISSAN,db]=1;
constraint RUHAMARKA[CASIO,1]+RUHAMARKA[CASIO,db]=1;
constraint VAROS[SZEKESFEHERVAR,1]+VAROS[SZEKESFEHERVAR,db]=1;


constraint forall(szek in PEOPLE where AUTO[TOYOTA,szek]=1)(KEDVENCFOCICSAPAT[REAL, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCISKOLAITANTARGY[BIOSZ,szek]=1)(KERESET[K560K, szek]=1);
constraint forall(szek in PEOPLE where NEV[ANDRAS,szek]=1)(KEDVENCETEL[PACAL, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCFOCICSAPAT[REAL,szek]=1)(KEDVENCSPORT[FUTAS, szek]=1);
constraint forall(szek in PEOPLE where VAROS[GYOR,szek]=1)(KEDVENCGYUMOLCSZOLDSEG[PARADICSOM, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCALLAT[OROSZLAN,szek]=1)(KEDVENCISKOLAITANTARGY[TORI, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCALLAT[SZAMAR,szek]=1)(KEDVENCSZIN[OKKER, szek]=1);
constraint forall(szek in PEOPLE where ELETKOR[HUSZONKETTO,szek]=1)(KEDVENCSPORT[ROPLABDA, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCSZIN[BARNA,szek]=1)(NEV[LACI, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCFOCICSAPAT[ROMA,szek]=1)(VAROS[SZEGED, szek]=1);
constraint forall(szek in PEOPLE where RUHAMARKA[REEBOK,szek]=1)(KEDVENCETEL[FAGYI, szek]=1);
constraint forall(szek in PEOPLE where AUTO[BMW,szek]=1)(KEDVENCISKOLAITANTARGY[OLASZ, szek]=1);
constraint forall(szek in PEOPLE where NEV[DALMA,szek]=1)(KEDVENCITAL[TEJ, szek]=1);
constraint forall(szek in PEOPLE where VAROS[GYOR,szek]=1)(KEDVENCALLAT[TIGRIS, szek]=1);
constraint forall(szek in PEOPLE where KERESET[K560K,szek]=1)(KEDVENCSZIN[FEKETE, szek]=1);
constraint forall(szek in PEOPLE where RUHAMARKA[CALVINKLEIN,szek]=1)(KEDVENCISKOLAITANTARGY[TESI, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCITAL[SOR,szek]=1)(ELETKOR[HUSZONOT, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCETEL[FAGYI,szek]=1)(KEDVENCFOCICSAPAT[BAYERN, szek]=1);
constraint forall(szek in PEOPLE where ELETKOR[HUSZONOT,szek]=1)(RUHAMARKA[PUMA, szek]=1);
constraint forall(szek in PEOPLE where KERESET[K500K,szek]=1)(KEDVENCISKOLAITANTARGY[INFORMATIKA, szek]=1);
constraint forall(szek in PEOPLE where RUHAMARKA[GUCCI,szek]=1)(KEDVENCITAL[WHISKY, szek]=1);
constraint forall(szek in PEOPLE where NEV[MARK,szek]=1)(KEDVENCFOCICSAPAT[INTER, szek]=1);
constraint forall(szek in PEOPLE where AUTO[TOYOTA,szek]=1)(NEV[JANI, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCGYUMOLCSZOLDSEG[BARACK,szek]=1)(KEDVENCITAL[SZORP, szek]=1);
constraint forall(szek in PEOPLE where KERESET[K560K,szek]=1)(MUNKA[NYOMOZO, szek]=1);
constraint forall(szek in PEOPLE where MUNKA[IRO,szek]=1)(NEV[ZSOFI, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCISKOLAITANTARGY[OROSZ,szek]=1)(KERESET[K640K, szek]=1);
constraint forall(szek in PEOPLE where ELETKOR[HUSZONHAROM,szek]=1)(KEDVENCGYUMOLCSZOLDSEG[SZILVA, szek]=1);
constraint forall(szek in PEOPLE where RUHAMARKA[CONVERSE,szek]=1)(NEV[JOZSI, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCSZIN[FEHER,szek]=1)(KEDVENCETEL[PITE, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCSPORT[FUTAS,szek]=1)(KERESET[K440K, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCITAL[WHISKY,szek]=1)(KEDVENCISKOLAITANTARGY[NYELVTAN, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCITAL[TEJ,szek]=1)(AUTO[MAZDA, szek]=1);
constraint forall(szek in PEOPLE where AUTO[FERRARI,szek]=1)(VAROS[NYIREGYHAZA, szek]=1);
constraint forall(szek in PEOPLE where ELETKOR[HUSZONHET,szek]=1)(KEDVENCSPORT[FALMASZAS, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCITAL[TEJ,szek]=1)(KEDVENCGYUMOLCSZOLDSEG[BROKKOLI, szek]=1);
constraint forall(szek in PEOPLE where AUTO[BMW,szek]=1)(KEDVENCETEL[LEKVAR, szek]=1);
constraint forall(szek in PEOPLE where RUHAMARKA[FILA,szek]=1)(KEDVENCITAL[GIN, szek]=1);
constraint forall(szek in PEOPLE where MUNKA[IRO,szek]=1)(KEDVENCALLAT[MACSKA, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCSZIN[SZURKE,szek]=1)(KEDVENCITAL[VODKA, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCSZIN[KEK,szek]=1)(AUTO[PEUGEOT, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCISKOLAITANTARGY[MATEK,szek]=1)(ELETKOR[HARMINCNEGY, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCGYUMOLCSZOLDSEG[NARANCS,szek]=1)(ELETKOR[HARMINCNEGY, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCFOCICSAPAT[PSG,szek]=1)(KEDVENCSZIN[BIBOR, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCGYUMOLCSZOLDSEG[DIO,szek]=1)(KEDVENCISKOLAITANTARGY[ANGOL, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCALLAT[TEKNOS,szek]=1)(AUTO[VOLVO, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCGYUMOLCSZOLDSEG[BANAN,szek]=1)(KEDVENCALLAT[KECSKE, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCETEL[LECSO,szek]=1)(KEDVENCSPORT[KUNGFU, szek]=1);
constraint forall(szek in PEOPLE where ELETKOR[HARMINCEGY,szek]=1)(KEDVENCALLAT[BEKA, szek]=1);
constraint forall(szek in PEOPLE where VAROS[MISKOLC,szek]=1)(KEDVENCETEL[SPAGETTI, szek]=1);
constraint forall(szek in PEOPLE where MUNKA[BIRO,szek]=1)(AUTO[PORSCHE, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCETEL[HUSLEVES,szek]=1)(KEDVENCSPORT[AEROBIK, szek]=1);
constraint forall(szek in PEOPLE where VAROS[SZEGED,szek]=1)(KERESET[K520K, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCFOCICSAPAT[BAYERN,szek]=1)(KERESET[K620K, szek]=1);
constraint forall(szek in PEOPLE where KEDVENCSPORT[KUNGFU,szek]=1)(KEDVENCGYUMOLCSZOLDSEG[PARADICSOM, szek]=1);


constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCSZIN[BARNA,x]=1 /\ AUTO[TOYOTA,y]=1)(sum(szek in x+1..y-1)(NEV[REKA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCFOCICSAPAT[BAYERN,x]=1 /\ KEDVENCISKOLAITANTARGY[OROSZ,y]=1)(sum(szek in x+1..y-1)(RUHAMARKA[CONVERSE,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCSZIN[OKKER,x]=1 /\ KEDVENCSPORT[KOSAR,y]=1)(sum(szek in x+1..y-1)(VAROS[KECSKEMET,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCFOCICSAPAT[INTER,x]=1 /\ KEDVENCSZIN[FEKETE,y]=1)(sum(szek in x+1..y-1)(KERESET[K420K,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCISKOLAITANTARGY[TESI,x]=1 /\ KEDVENCITAL[TEJ,y]=1)(sum(szek in x+1..y-1)(NEV[BELA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where NEV[JANI,x]=1 /\ VAROS[SZEGED,y]=1)(sum(szek in x+1..y-1)(KEDVENCFOCICSAPAT[MILAN,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where AUTO[FERRARI,x]=1 /\ VAROS[MISKOLC,y]=1)(sum(szek in x+1..y-1)(ELETKOR[HARMINC,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where MUNKA[IGAZGATO,x]=1 /\ AUTO[NISSAN,y]=1)(sum(szek in x+1..y-1)(ELETKOR[HUSZONNEGY,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCGYUMOLCSZOLDSEG[BARACK,x]=1 /\ KERESET[K680K,y]=1)(sum(szek in x+1..y-1)(KEDVENCISKOLAITANTARGY[FILOZOFIA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where AUTO[AUDI,x]=1 /\ KEDVENCITAL[VIZ,y]=1)(sum(szek in x+1..y-1)(MUNKA[EPITESZ,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KERESET[K480K,x]=1 /\ VAROS[BUDAPEST,y]=1)(sum(szek in x+1..y-1)(KEDVENCISKOLAITANTARGY[KEMIA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCSZIN[BARNA,x]=1 /\ KEDVENCITAL[KAKAO,y]=1)(sum(szek in x+1..y-1)(KEDVENCISKOLAITANTARGY[FIZIKA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where ELETKOR[HARMINCHAROM,x]=1 /\ AUTO[BMW,y]=1)(sum(szek in x+1..y-1)(KEDVENCSZIN[ROZSASZIN,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCALLAT[KUTYA,x]=1 /\ VAROS[PECS,y]=1)(sum(szek in x+1..y-1)(KEDVENCFOCICSAPAT[UNITED,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCSZIN[FEKETE,x]=1 /\ KEDVENCALLAT[SZAMAR,y]=1)(sum(szek in x+1..y-1)(AUTO[HONDA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where ELETKOR[HARMINCEGY,x]=1 /\ KEDVENCSPORT[KOSAR,y]=1)(sum(szek in x+1..y-1)(AUTO[FORD,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where AUTO[VOLVO,x]=1 /\ KEDVENCITAL[WHISKY,y]=1)(sum(szek in x+1..y-1)(KEDVENCALLAT[ROKA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where ELETKOR[HUSZONKILENC,x]=1 /\ KEDVENCSPORT[IJASZAT,y]=1)(sum(szek in x+1..y-1)(KEDVENCALLAT[PILLANGO,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KERESET[K680K,x]=1 /\ KEDVENCISKOLAITANTARGY[OROSZ,y]=1)(sum(szek in x+1..y-1)(KEDVENCETEL[PALACSINTA,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCETEL[LECSO,x]=1 /\ KEDVENCITAL[BOR,y]=1)(sum(szek in x+1..y-1)(KEDVENCGYUMOLCSZOLDSEG[KIWI,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where MUNKA[MERNOK,x]=1 /\ RUHAMARKA[MUSTANG,y]=1)(sum(szek in x+1..y-1)(KEDVENCSPORT[LOVESZET,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where VAROS[GYOR,x]=1 /\ KEDVENCALLAT[KUTYA,y]=1)(sum(szek in x+1..y-1)(KEDVENCETEL[RANTOTTHUS,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCALLAT[TIGRIS,x]=1 /\ KEDVENCITAL[KOKTEL,y]=1)(sum(szek in x+1..y-1)(RUHAMARKA[ADIDAS,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCFOCICSAPAT[UNITED,x]=1 /\ ELETKOR[HARMINCOT,y]=1)(sum(szek in x+1..y-1)(VAROS[VESZPREM,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCETEL[HUSLEVES,x]=1 /\ MUNKA[KATONA,y]=1)(sum(szek in x+1..y-1)(KERESET[K580K,szek])=1);
constraint forall(x in PEOPLE, y in PEOPLE where KEDVENCSPORT[FALMASZAS,x]=1 /\ KEDVENCGYUMOLCSZOLDSEG[BROKKOLI,y]=1)(sum(szek in x+1..y-1)(KEDVENCETEL[SUTI,szek])=1);



constraint ELETKOR[HUSZONKETTO,6]=1;
constraint AUTO[BMW,12]=1;
constraint RUHAMARKA[REEBOK,9]=1;
constraint KEDVENCITAL[VIZ,5]=1;
constraint VAROS[GYOR,2]=1;
constraint KEDVENCISKOLAITANTARGY[BIOSZ,8]=1;
constraint KERESET[K660K,5]=1;
constraint NEV[DALMA,14]=1;
constraint AUTO[TOYOTA,10]=1;
constraint MUNKA[TUZOLTO,3]=1;
constraint KEDVENCALLAT[OROSZLAN,1]=1;
constraint KEDVENCFOCICSAPAT[ROMA,13]=1;
constraint KEDVENCFOCICSAPAT[JUVENTUS,1]=1;
constraint NEV[PETRA,7]=1;
constraint AUTO[SKODA,6]=1;
constraint RUHAMARKA[MUSTANG,14]=1;
constraint MUNKA[PORTAS,15]=1;
constraint RUHAMARKA[CALVINKLEIN,3]=1;
constraint MUNKA[IGAZGATO,12]=1;
constraint VAROS[SZOLNOK,7]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[RIBIZLI,8]=1;
constraint NEV[DANI,1]=1;
constraint KEDVENCFOCICSAPAT[CHELSEA,8]=1;
constraint KEDVENCALLAT[TEKNOS,7]=1;
constraint KEDVENCETEL[SULTKRUMPLI,8]=1;
constraint ELETKOR[HUSZONNYOLC,3]=1;
constraint ELETKOR[HARMINCOT,11]=1;
constraint ELETKOR[HUSZONKILENC,8]=1;
constraint KEDVENCITAL[KAKAO,9]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[PAPRIKA,11]=1;
constraint MUNKA[UGYVED,7]=1;
constraint KEDVENCISKOLAITANTARGY[NEMET,14]=1;
constraint VAROS[BUDAPEST,4]=1;
constraint KEDVENCALLAT[RIGO,6]=1;
constraint KEDVENCSPORT[FUTSAL,8]=1;
constraint KEDVENCISKOLAITANTARGY[MATEK,13]=1;
constraint KEDVENCITAL[KAKAO,9]=1;
constraint KEDVENCITAL[BOR,4]=1;
constraint KEDVENCGYUMOLCSZOLDSEG[ALMA,6]=1;
constraint VAROS[PECS,10]=1;
constraint KERESET[K680K,12]=1;
constraint ELETKOR[HUSZONHAT,12]=1;
constraint KEDVENCETEL[HUSLEVES,7]=1;
constraint KEDVENCFOCICSAPAT[LYON,6]=1;
constraint MUNKA[ELADO,6]=1;
constraint AUTO[MERCEDES,8]=1;
constraint VAROS[VAC,6]=1;
constraint KEDVENCALLAT[KUTYA,5]=1;
constraint MUNKA[KOMUVES,2]=1;
constraint KEDVENCITAL[GYUMOLCSLE,2]=1;
constraint KEDVENCSZIN[PIROS,7]=1;
constraint KEDVENCSZIN[MAGENTA,12]=1;
constraint KEDVENCFOCICSAPAT[CITY,4]=1;
constraint MUNKA[KATONA,13]=1;
constraint ELETKOR[HUSZONEGY,2]=1;
constraint VAROS[MISKOLC,5]=1;
constraint KEDVENCSPORT[IJASZAT,14]=1;
constraint KEDVENCSPORT[GOKART,5]=1;
constraint KEDVENCISKOLAITANTARGY[FIZIKA,5]=1;
constraint KEDVENCSZIN[FEHER,10]=1;
constraint ELETKOR[HARMINC,4]=1;
constraint KEDVENCETEL[SULTKRUMPLI,8]=1;


constraint forall(x in PEOPLE where AUTO[BMW, x]=1)(sum(p in x+1..db)(KEDVENCFOCICSAPAT[SPURS, p])=1);
constraint forall(x in PEOPLE where VAROS[GYOR, x]=1)(sum(p in 1..x-1)(KEDVENCITAL[SOR, p])=1);
constraint forall(x in PEOPLE where NEV[PETRA, x]=1)(sum(p in x+1..db)(RUHAMARKA[FILA, p])=1);
constraint forall(x in PEOPLE where KEDVENCSPORT[ROGBI, x]=1)(sum(p in 1..x-1)(KEDVENCSZIN[SARGA, p])=1);
constraint forall(x in PEOPLE where KERESET[K660K, x]=1)(sum(p in x+1..db)(RUHAMARKA[NIKE, p])=1);
constraint forall(x in PEOPLE where AUTO[SKODA, x]=1)(sum(p in 1..x-1)(KEDVENCSZIN[NARANCSSARGA, p])=1);
constraint forall(x in PEOPLE where KEDVENCSZIN[KEK, x]=1)(sum(p in 1..x-1)(NEV[PETI, p])=1);
constraint forall(x in PEOPLE where KEDVENCFOCICSAPAT[LIVERPOOL, x]=1)(sum(p in 1..x-1)(KEDVENCETEL[LECSO, p])=1);
constraint forall(x in PEOPLE where KEDVENCISKOLAITANTARGY[TESI, x]=1)(sum(p in 1..x-1)(AUTO[RENAULT, p])=1);
constraint forall(x in PEOPLE where KEDVENCITAL[KOKTEL, x]=1)(sum(p in x+1..db)(ELETKOR[HARMINCEGY, p])=1);
constraint forall(x in PEOPLE where RUHAMARKA[EVERLAST, x]=1)(sum(p in x+1..db)(KEDVENCSPORT[USZAS, p])=1);
constraint forall(x in PEOPLE where ELETKOR[HUSZONKETTO, x]=1)(sum(p in 1..x-1)(KEDVENCALLAT[LO, p])=1);
constraint forall(x in PEOPLE where KEDVENCISKOLAITANTARGY[MATEK, x]=1)(sum(p in x+1..db)(MUNKA[TECHNIKUS, p])=1);
constraint forall(x in PEOPLE where KEDVENCFOCICSAPAT[CITY, x]=1)(sum(p in x+1..db)(KEDVENCSZIN[LILA, p])=1);
constraint forall(x in PEOPLE where RUHAMARKA[NIKE, x]=1)(sum(p in 1..x-1)(AUTO[SUZUKI, p])=1);
constraint forall(x in PEOPLE where KEDVENCSPORT[FUTSAL, x]=1)(sum(p in x+1..db)(MUNKA[BIRO, p])=1);
constraint forall(x in PEOPLE where VAROS[SZOLNOK, x]=1)(sum(p in x+1..db)(KEDVENCGYUMOLCSZOLDSEG[NARANCS, p])=1);
constraint forall(x in PEOPLE where KEDVENCSPORT[ROGBI, x]=1)(sum(p in 1..x-1)(KERESET[K460K, p])=1);
constraint forall(x in PEOPLE where KEDVENCSZIN[SZURKE, x]=1)(sum(p in x+1..db)(KEDVENCALLAT[TENGERIMALAC, p])=1);
constraint forall(x in PEOPLE where AUTO[PEUGEOT, x]=1)(sum(p in 1..x-1)(KEDVENCFOCICSAPAT[BARCELONA, p])=1);
constraint forall(x in PEOPLE where RUHAMARKA[VANS, x]=1)(sum(p in x+1..db)(KEDVENCITAL[TEA, p])=1);
constraint forall(x in PEOPLE where KEDVENCSPORT[FOCI, x]=1)(sum(p in x+1..db)(KEDVENCALLAT[KUTYA, p])=1);


constraint forall(p in 1..db-1 where NEV[DALMA, p]=1)(ELETKOR[HUSZONHAROM, p+1]=1);
constraint forall(p in 1..db-1 where RUHAMARKA[REEBOK, p]=1)(RUHAMARKA[VANS, p+1]=1);
constraint forall(p in 1..db-1 where KEDVENCGYUMOLCSZOLDSEG[BARACK, p]=1)(KEDVENCISKOLAITANTARGY[BIOSZ, p+1]=1);
constraint forall(p in 2..db where KERESET[K660K, p]=1)(NEV[ANDRAS, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCSPORT[FUTAS, p]=1)(KEDVENCALLAT[SZAMAR, p+1]=1);
constraint forall(p in 2..db where NEV[ANDRAS, p]=1)(KEDVENCSZIN[BARNA, p-1]=1);
constraint forall(p in 2..db where ELETKOR[HUSZONKETTO, p]=1)(NEV[MARK, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCSZIN[FEKETE, p]=1)(MUNKA[IRO, p+1]=1);
constraint forall(p in 2..db where NEV[PETRA, p]=1)(KEDVENCETEL[KENYER, p-1]=1);
constraint forall(p in 2..db where KERESET[K660K, p]=1)(KEDVENCSPORT[ROGBI, p-1]=1);
constraint forall(p in 1..db-1 where VAROS[GYOR, p]=1)(AUTO[FERRARI, p+1]=1);
constraint forall(p in 2..db where KEDVENCALLAT[TIGRIS, p]=1)(KEDVENCSPORT[JUDO, p-1]=1);
constraint forall(p in 2..db where VAROS[SZEGED, p]=1)(NEV[GIZI, p-1]=1);
constraint forall(p in 1..db-1 where NEV[PETRA, p]=1)(NEV[ZOLI, p+1]=1);
constraint forall(p in 1..db-1 where RUHAMARKA[VANS, p]=1)(RUHAMARKA[GUCCI, p+1]=1);
constraint forall(p in 2..db where VAROS[SZEGED, p]=1)(RUHAMARKA[EVERLAST, p-1]=1);
constraint forall(p in 2..db where NEV[ANDRAS, p]=1)(KEDVENCFOCICSAPAT[LIVERPOOL, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCISKOLAITANTARGY[OLASZ, p]=1)(KEDVENCSZIN[SZURKE, p+1]=1);
constraint forall(p in 2..db where KEDVENCGYUMOLCSZOLDSEG[BARACK, p]=1)(KERESET[K500K, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCISKOLAITANTARGY[TESI, p]=1)(KEDVENCGYUMOLCSZOLDSEG[BANAN, p+1]=1);
constraint forall(p in 1..db-1 where RUHAMARKA[MUSTANG, p]=1)(VAROS[SZOMBATHELY, p+1]=1);
constraint forall(p in 2..db where MUNKA[PORTAS, p]=1)(KERESET[K600K, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCSZIN[OKKER, p]=1)(VAROS[ESZTERGOM, p+1]=1);
constraint forall(p in 2..db where KEDVENCALLAT[TIGRIS, p]=1)(AUTO[AUDI, p-1]=1);
constraint forall(p in 1..db-1 where RUHAMARKA[REEBOK, p]=1)(KEDVENCSZIN[FEHER, p+1]=1);
constraint forall(p in 2..db where NEV[DALMA, p]=1)(KEDVENCALLAT[FARKAS, p-1]=1);
constraint forall(p in 2..db where NEV[GIZI, p]=1)(VAROS[DEBRECEN, p-1]=1);
constraint forall(p in 2..db where KEDVENCALLAT[TIGRIS, p]=1)(KEDVENCSZIN[ZOLD, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCSZIN[OKKER, p]=1)(KEDVENCFOCICSAPAT[NAPOLI, p+1]=1);
constraint forall(p in 1..db-1 where RUHAMARKA[MUSTANG, p]=1)(KEDVENCETEL[RAKOTTKRUMPLI, p+1]=1);
constraint forall(p in 2..db where KEDVENCFOCICSAPAT[BAYERN, p]=1)(VAROS[MOR, p-1]=1);
constraint forall(p in 1..db-1 where KERESET[K500K, p]=1)(RUHAMARKA[OMBRE, p+1]=1);
constraint forall(p in 2..db where NEV[MARK, p]=1)(KEDVENCSZIN[KEK, p-1]=1);
constraint forall(p in 2..db where KEDVENCALLAT[SZAMAR, p]=1)(KEDVENCGYUMOLCSZOLDSEG[DIO, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCSZIN[FEKETE, p]=1)(ELETKOR[HUSZONHET, p+1]=1);
constraint forall(p in 2..db where NEV[JOZSI, p]=1)(KEDVENCGYUMOLCSZOLDSEG[KAPOSZTA, p-1]=1);
constraint forall(p in 2..db where KEDVENCSZIN[SARGA, p]=1)(KEDVENCETEL[PIZZA, p-1]=1);
constraint forall(p in 1..db-1 where AUTO[MAZDA, p]=1)(KEDVENCSZIN[ARANY, p+1]=1);
constraint forall(p in 2..db where KEDVENCSZIN[SZURKE, p]=1)(KEDVENCSPORT[KARATE, p-1]=1);
constraint forall(p in 2..db where KEDVENCETEL[KENYER, p]=1)(MUNKA[RENDOR, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCFOCICSAPAT[CHELSEA, p]=1)(KEDVENCGYUMOLCSZOLDSEG[SZOLO, p+1]=1);
constraint forall(p in 2..db where RUHAMARKA[MUSTANG, p]=1)(KEDVENCETEL[FOZELEK, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCALLAT[FARKAS, p]=1)(KEDVENCFOCICSAPAT[PSG, p+1]=1);
constraint forall(p in 2..db where VAROS[BUDAPEST, p]=1)(KERESET[K540K, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCETEL[PIZZA, p]=1)(RUHAMARKA[ARMANI, p+1]=1);
constraint forall(p in 2..db where KERESET[K500K, p]=1)(RUHAMARKA[LACOSTE, p-1]=1);
constraint forall(p in 2..db where KEDVENCETEL[KENYER, p]=1)(KEDVENCGYUMOLCSZOLDSEG[DINNYE, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCGYUMOLCSZOLDSEG[KIWI, p]=1)(KERESET[K700K, p+1]=1);
constraint forall(p in 2..db where VAROS[SZOLNOK, p]=1)(KEDVENCITAL[KOKTEL, p-1]=1);
constraint forall(p in 2..db where KEDVENCITAL[WHISKY, p]=1)(MUNKA[MERNOK, p-1]=1);
constraint forall(p in 1..db-1 where MUNKA[TUZOLTO, p]=1)(KEDVENCISKOLAITANTARGY[SPANYOL, p+1]=1);
constraint forall(p in 2..db where NEV[ANDRAS, p]=1)(KEDVENCITAL[KOLA, p-1]=1);
constraint forall(p in 2..db where RUHAMARKA[GUCCI, p]=1)(KEDVENCITAL[PALINKA, p-1]=1);
constraint forall(p in 2..db where KEDVENCITAL[GIN, p]=1)(KEDVENCISKOLAITANTARGY[IRODALOM, p-1]=1);
constraint forall(p in 2..db where KEDVENCSZIN[FEKETE, p]=1)(ELETKOR[HARMINCHAROM, p-1]=1);
constraint forall(p in 2..db where KEDVENCISKOLAITANTARGY[IRODALOM, p]=1)(KEDVENCSZIN[LILA, p-1]=1);
constraint forall(p in 1..db-1 where KEDVENCALLAT[TEKNOS, p]=1)(ELETKOR[HUSZONKILENC, p+1]=1);
constraint forall(p in 2..db where KEDVENCETEL[LEKVAR, p]=1)(KEDVENCETEL[SUTI, p-1]=1);
constraint forall(p in 2..db where NEV[REKA, p]=1)(NEV[MARK, p-1]=1);


solve satisfy;

int: width = -15;
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in NEVS where fix(NEV[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in ELETKORS where fix(ELETKOR[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCSZINS where fix(KEDVENCSZIN[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in AUTOS where fix(AUTO[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCALLATS where fix(KEDVENCALLAT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCFOCICSAPATS where fix(KEDVENCFOCICSAPAT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCSPORTS where fix(KEDVENCSPORT[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in VAROSS where fix(VAROS[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KERESETS where fix(KERESET[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in RUHAMARKAS where fix(RUHAMARKA[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCETELS where fix(KEDVENCETEL[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCITALS where fix(KEDVENCITAL[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCGYUMOLCSZOLDSEGS where fix(KEDVENCGYUMOLCSZOLDSEG[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in KEDVENCISKOLAITANTARGYS where fix(KEDVENCISKOLAITANTARGY[n,p])=1]++["\n"];
output [format(width,show(n)) ++ "\t" | p in PEOPLE, n in MUNKAS where fix(MUNKA[n,p])=1]++["\n"];